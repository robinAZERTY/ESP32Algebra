<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="334px" preserveAspectRatio="none" style="width:686px;height:334px;" version="1.1" viewBox="0 0 686 334" width="686px" zoomAndPan="magnify"><defs><filter height="300%" id="falodhp6cbda3" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[205dc66f7e9b2016b3f57d76c14da5be]
class MatrixBase--><rect fill="#FEFECE" filter="url(#falodhp6cbda3)" height="316.8984" id="MatrixBase" style="stroke: #A80036; stroke-width: 1.5;" width="665" x="7" y="7"/><ellipse cx="205.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M205.3594,18.3438 L204.2031,23.4219 L206.5313,23.4219 L205.3594,18.3438 Z M203.875,16.1094 L206.8594,16.1094 L210.2188,28.5 L207.7656,28.5 L207,25.4375 L203.7188,25.4375 L202.9688,28.5 L200.5313,28.5 L203.875,16.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="225.75" y="27.1543">MatrixBase</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="190" x="485" y="4"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="486" y="16.1387">template&lt;typename T=float&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="671" y1="39" y2="39"/><polygon fill="none" points="18,45,22,49,18,53,14,49" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="27" y="53.2104">_cols : size_t</text><polygon fill="none" points="18,57.8047,22,61.8047,18,65.8047,14,61.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="27" y="66.0151">_rows : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="8" x2="671" y1="72.6094" y2="72.6094"/><ellipse cx="18" cy="83.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="27" y="86.8198">MatrixBase()</text><ellipse cx="18" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="27" y="99.6245">MatrixBase(const size_t rows, const size_t cols)</text><polygon fill="#FFFF44" points="18,104.2188,22,108.2188,18,112.2188,14,108.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="27" y="112.4292">checkOverlap(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="205" y="112.4292">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="18,117.0234,22,121.0234,18,125.0234,14,121.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="27" y="125.2339">checkSize_add(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="211" y="125.2339">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="18,129.8281,22,133.8281,18,137.8281,14,133.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="27" y="138.0386">checkSize_mul(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="211" y="138.0386">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><ellipse cx="18" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="27" y="150.8433">fill(const T value) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="18,155.4375,22,159.4375,18,163.4375,14,159.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="27" y="163.6479">refer(const Vector&lt;T&gt;&amp; data, const size_t rows, const size_t cols) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="18,168.2422,22,172.2422,18,176.2422,14,172.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="27" y="176.4526">refer(const T* data, const size_t rows, const size_t cols) : MatrixBase&lt;T&gt;*</text><ellipse cx="18" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="639" x="27" y="189.2573">resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : MatrixBase&lt;T&gt;*</text><ellipse cx="18" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="27" y="202.062">resizeLike(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="444" x="185" y="202.062">&amp; other, const bool deallocIfPossible, const bool saveData) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="18,206.6563,22,210.6563,18,214.6563,14,210.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="27" y="214.8667">swap(MatrixBase&lt;T&gt;&amp; other) : MatrixBase&lt;T&gt;*</text><ellipse cx="18" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="27" y="227.6714">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="18" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="27" y="240.4761">operator()(const size_t row, const size_t col) : T&amp; {query}</text><ellipse cx="18" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="27" y="253.2808">isAdditionCompatible(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="248" y="253.2808">&amp; other) : bool {query}</text><ellipse cx="18" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="27" y="266.0854">isMultiplicationCompatible(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="276" y="266.0854">&amp; other) : bool {query}</text><ellipse cx="18" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="27" y="278.8901">cols() : size_t {query}</text><polygon fill="#FFFF44" points="18,283.4844,22,287.4844,18,291.4844,14,287.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="27" y="291.6948">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><polygon fill="#FFFF44" points="18,296.2891,22,300.2891,18,304.2891,14,300.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="27" y="304.4995">minMemorySize() : size_t {query}</text><ellipse cx="18" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="27" y="317.3042">rows() : size_t {query}</text><!--MD5=[4fd856f1eb095045d9486dc66beef290]
@startuml






abstract class MatrixBase <template<typename T=float>> {
	+MatrixBase()
	+MatrixBase(const size_t rows, const size_t cols)
	#checkOverlap(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	#checkSize_add(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	#checkSize_mul(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	+fill(const T value) : MatrixBase<T>*
	#refer(const Vector<T>& data, const size_t rows, const size_t cols) : MatrixBase<T>*
	#refer(const T* data, const size_t rows, const size_t cols) : MatrixBase<T>*
	+resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : MatrixBase<T>*
	+resizeLike(const MatrixBase<U>& other, const bool deallocIfPossible, const bool saveData) : MatrixBase<T>*
	#swap(MatrixBase<T>& other) : MatrixBase<T>*
	+{abstract} operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	+isAdditionCompatible(const MatrixBase<U>& other) : bool {query}
	+isMultiplicationCompatible(const MatrixBase<U>& other) : bool {query}
	#_cols : size_t
	#_rows : size_t
	+cols() : size_t {query}
	#{abstract} minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#minMemorySize() : size_t {query}
	+rows() : size_t {query}
}

















@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.25+9
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>