<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="988px" preserveAspectRatio="none" style="width:592px;height:988px;" version="1.1" viewBox="0 0 592 988" width="592px" zoomAndPan="magnify"><defs><filter height="300%" id="f6b9s07nvz3uq" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[ea775af43a0da7cb543d6bee4ab62c40]
class Vector--><rect fill="#FEFECE" filter="url(#f6b9s07nvz3uq)" height="969.9375" id="Vector" style="stroke: #A80036; stroke-width: 1.5;" width="539" x="6" y="8"/><ellipse cx="173.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M176.7188,29.6406 Q176.1406,29.9375 175.5,30.0781 Q174.8594,30.2344 174.1563,30.2344 Q171.6563,30.2344 170.3281,28.5938 Q169.0156,26.9375 169.0156,23.8125 Q169.0156,20.6875 170.3281,19.0313 Q171.6563,17.375 174.1563,17.375 Q174.8594,17.375 175.5,17.5313 Q176.1563,17.6875 176.7188,17.9844 L176.7188,20.7031 Q176.0938,20.125 175.5,19.8594 Q174.9063,19.5781 174.2813,19.5781 Q172.9375,19.5781 172.25,20.6563 Q171.5625,21.7188 171.5625,23.8125 Q171.5625,25.9063 172.25,26.9844 Q172.9375,28.0469 174.2813,28.0469 Q174.9063,28.0469 175.5,27.7813 Q176.0938,27.5 176.7188,26.9219 L176.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="194.25" y="28.1543">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="396" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="397" y="17.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="544" y1="40" y2="40"/><polygon fill="none" points="17,46,21,50,17,54,13,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="26" y="54.2104">_begin : T*</text><polygon fill="none" points="17,58.8047,21,62.8047,17,66.8047,13,62.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="26" y="67.0151">_end : T*</text><polygon fill="none" points="17,71.6094,21,75.6094,17,79.6094,13,75.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="26" y="79.8198">_endOfStorage : T*</text><polygon fill="none" points="17,84.4141,21,88.4141,17,92.4141,13,88.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="186" x="26" y="92.6245">staticHelper : static const Vector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="544" y1="99.2188" y2="99.2188"/><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="26" y="113.4292">Vector()</text><ellipse cx="17" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="126.2339">Vector(const size_t N)</text><ellipse cx="17" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="139.0386">Vector(internal::tmp&lt;Vector&gt;&amp;&amp; v)</text><ellipse cx="17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="151.8433">Vector(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="43" x="184" y="151.8433">&gt;&amp;&amp; v)</text><ellipse cx="17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="164.6479">Vector(const Vector&amp; v, const bool share)</text><ellipse cx="17" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="26" y="177.4526">Vector(T* begin, const size_t N, const bool share)</text><ellipse cx="17" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="26" y="190.2573">~Vector()</text><ellipse cx="17" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="203.062">operator[](size_t i) : T {query}</text><ellipse cx="17" cy="212.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="215.8667">operator[](const size_t i) : T&amp;</text><ellipse cx="17" cy="225.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="26" y="228.6714">begin() : T* {query}</text><ellipse cx="17" cy="238.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="26" y="241.4761">end() : T* {query}</text><ellipse cx="17" cy="251.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="26" y="254.2808">dot(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="119" y="254.2808">&amp; other, const bool checkSize) : V</text><ellipse cx="17" cy="263.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="267.0854">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="191" y="267.0854">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><polygon fill="#FFFF44" points="17,271.6797,21,275.6797,17,279.6797,13,275.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="26" y="279.8901">allocate(const size_t capacity, const bool deallocIfPossible, const bool saveData) : Vector*</text><ellipse cx="17" cy="289.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="292.6948">fill(const T val) : Vector*</text><ellipse cx="17" cy="302.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="26" y="305.4995">hold(T* begin, const size_t N, const bool checkSize) : Vector*</text><ellipse cx="17" cy="315.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="26" y="318.3042">hold(const Vector&amp; v, const bool checkSize) : Vector*</text><ellipse cx="17" cy="327.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="331.1089">hold(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="125" y="331.1089">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="17" cy="340.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="343.9136">holdAdd(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="146" y="343.9136">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="17" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="356.7183">holdAdd(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="146" y="356.7183">&amp; v1, const T val, const bool checkSize) : Vector*</text><ellipse cx="17" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26" y="369.5229">holdDiv(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="142" y="369.5229">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="17" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="382.3276">holdDiv(const T val, const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="212" y="382.3276">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="17" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="395.1323">holdMul(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="171" y="395.1323">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><ellipse cx="17" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="407.937">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="194" y="407.937">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><ellipse cx="17" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="420.7417">holdMul(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="144" y="420.7417">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="17" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="433.5464">holdMul(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="144" y="433.5464">&amp; v1, const V val, const bool checkSize) : Vector*</text><ellipse cx="17" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="446.3511">holdSub(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="147" y="446.3511">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="17" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="459.1558">holdSub(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="147" y="459.1558">&amp; v1, const T val, const bool checkSize) : Vector*</text><ellipse cx="17" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="471.9604">holdSub(const T val, const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="217" y="471.9604">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="17" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="26" y="484.7651">insert(const T&amp; value, const size_t index) : Vector*</text><ellipse cx="17" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="497.5698">operator*=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="165" y="497.5698">&amp; v) : Vector*</text><ellipse cx="17" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="26" y="510.3745">operator*=(const T&amp; val) : Vector*</text><ellipse cx="17" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="26" y="523.1792">operator*=(internal::tmp&lt;Vector&lt;T&gt;&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="535.9839">operator+=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="168" y="535.9839">&amp; v) : Vector*</text><ellipse cx="17" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="548.7886">operator+=(const T&amp; val) : Vector*</text><ellipse cx="17" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="561.5933">operator+=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="215" y="561.5933">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="574.3979">operator-=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="163" y="574.3979">&amp; v) : Vector*</text><ellipse cx="17" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="26" y="587.2026">operator-=(const T&amp; val) : Vector*</text><ellipse cx="17" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="600.0073">operator-=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="210" y="600.0073">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="612.812">operator/=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="163" y="612.812">&amp; v) : Vector*</text><ellipse cx="17" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="26" y="625.6167">operator/=(const T&amp; val) : Vector*</text><ellipse cx="17" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="638.4214">operator/=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="210" y="638.4214">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="26" y="651.2261">operator=(const Vector&amp; v) : Vector*</text><ellipse cx="17" cy="660.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="26" y="664.0308">operator=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="159" y="664.0308">&amp; v) : Vector*</text><ellipse cx="17" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="26" y="676.8354">operator=(internal::tmp&lt;Vector&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="26" y="689.6401">operator=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="206" y="689.6401">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="17" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="702.4448">pop_back() : Vector*</text><ellipse cx="17" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="715.2495">push_back(const T&amp; value) : Vector*</text><polygon fill="#FFFF44" points="17,719.8438,21,723.8438,17,727.8438,13,723.8438" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="26" y="728.0542">refer(const Vector&amp; other) : Vector*</text><polygon fill="#FFFF44" points="17,732.6484,21,736.6484,17,740.6484,13,736.6484" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="26" y="740.8589">refer(T* data, size_t length) : Vector*</text><ellipse cx="17" cy="750.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="26" y="753.6636">removeAt(const size_t index) : Vector*</text><ellipse cx="17" cy="763.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="26" y="766.4683">removeFirst(const T&amp; value) : Vector*</text><ellipse cx="17" cy="776.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="26" y="779.2729">removeLast(const T&amp; value) : Vector*</text><ellipse cx="17" cy="788.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="26" y="792.0776">resize(const size_t N, const bool deallocateIfPossible, const bool saveData) : Vector*</text><ellipse cx="17" cy="801.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26" y="804.8823">sort(const bool ascending) : Vector*</text><polygon fill="#FFFF44" points="17,809.4766,21,813.4766,17,817.4766,13,813.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="26" y="817.687">swap(Vector&amp; other) : Vector*</text><ellipse cx="17" cy="827.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="26" y="830.4917">findAll(const T&amp; value, Vector&lt;size_t&gt;&amp; indices_holder) : Vector&lt;size_t&gt;* {query}</text><ellipse cx="17" cy="840.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="26" y="843.2964">operator!=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="110" x="162" y="843.2964">&amp; v) : bool {query}</text><ellipse cx="17" cy="852.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="26" y="856.1011">operator!=(const T val) : bool {query}</text><ellipse cx="17" cy="865.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="868.9058">operator==(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="110" x="168" y="868.9058">&amp; v) : bool {query}</text><ellipse cx="17" cy="878.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="26" y="881.7104">operator==(const T val) : bool {query}</text><polygon fill="#FFFF44" points="17,886.3047,21,890.3047,17,894.3047,13,890.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="894.5151">overlap(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="143" y="894.5151">&amp; other) : bool {query}</text><ellipse cx="17" cy="904.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="26" y="907.3198">shared() : bool {query}</text><ellipse cx="17" cy="916.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="920.1245">capacity() : size_t {query}</text><ellipse cx="17" cy="929.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="932.9292">findFirst(const T&amp; value) : size_t {query}</text><ellipse cx="17" cy="942.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="26" y="945.7339">findLast(const T&amp; value) : size_t {query}</text><polygon fill="#FFFF44" points="17,950.3281,21,954.3281,17,958.3281,13,954.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="26" y="958.5386">minMemorySize(const size_t N) : size_t {query}</text><ellipse cx="17" cy="968.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="26" y="971.3433">size() : size_t {query}</text><!--MD5=[62dca2606b7a812a31f88295add19a4f]
reverse link Vector to Vector--><path d="M552.44,365.79 C569.64,395.82 580,438.23 580,493 C580,555.05 566.71,601.22 545.23,631.51 " fill="none" id="Vector&lt;-Vector" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="545.23,354.49,545.0851,361.6996,551.6844,364.6063,551.8293,357.3967,545.23,354.49" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3325b095bbfdc1d65020107e87a3605f]
@startuml






class Vector <template<typename T>> {
	+Vector()
	+Vector(const size_t N)
	+Vector(internal::tmp<Vector>&& v)
	+Vector(internal::tmp<Vector<U>>&& v)
	+Vector(const Vector& v, const bool share)
	+Vector(T* begin, const size_t N, const bool share)
	+~Vector()
	+operator[](size_t i) : T {query}
	+operator[](const size_t i) : T&
	#_begin : T*
	#_end : T*
	#_endOfStorage : T*
	+begin() : T* {query}
	+end() : T* {query}
	+dot(const Vector<U>& other, const bool checkSize) : V
	+addMul(const rowMajorMatrix<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	#allocate(const size_t capacity, const bool deallocIfPossible, const bool saveData) : Vector*
	+fill(const T val) : Vector*
	+hold(T* begin, const size_t N, const bool checkSize) : Vector*
	+hold(const Vector& v, const bool checkSize) : Vector*
	+hold(const Vector<U>& v, const bool checkSize) : Vector*
	+holdAdd(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdAdd(const Vector<U>& v1, const T val, const bool checkSize) : Vector*
	+holdDiv(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdDiv(const T val, const Vector<U>& v, const bool checkSize) : Vector*
	+holdMul(const MatrixBase<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	+holdMul(const rowMajorMatrix<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	+holdMul(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdMul(const Vector<U>& v1, const V val, const bool checkSize) : Vector*
	+holdSub(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdSub(const Vector<U>& v1, const T val, const bool checkSize) : Vector*
	+holdSub(const T val, const Vector<U>& v, const bool checkSize) : Vector*
	+insert(const T& value, const size_t index) : Vector*
	+operator*=(const Vector<U>& v) : Vector*
	+operator*=(const T& val) : Vector*
	+operator*=(internal::tmp<Vector<T>>&& v) : Vector*
	+operator+=(const Vector<U>& v) : Vector*
	+operator+=(const T& val) : Vector*
	+operator+=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator-=(const Vector<U>& v) : Vector*
	+operator-=(const T& val) : Vector*
	+operator-=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator/=(const Vector<U>& v) : Vector*
	+operator/=(const T& val) : Vector*
	+operator/=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator=(const Vector& v) : Vector*
	+operator=(const Vector<U>& v) : Vector*
	+operator=(internal::tmp<Vector>&& v) : Vector*
	+operator=(internal::tmp<Vector<U>>&& v) : Vector*
	+pop_back() : Vector*
	+push_back(const T& value) : Vector*
	#refer(const Vector& other) : Vector*
	#refer(T* data, size_t length) : Vector*
	+removeAt(const size_t index) : Vector*
	+removeFirst(const T& value) : Vector*
	+removeLast(const T& value) : Vector*
	+resize(const size_t N, const bool deallocateIfPossible, const bool saveData) : Vector*
	+sort(const bool ascending) : Vector*
	#swap(Vector& other) : Vector*
	+findAll(const T& value, Vector<size_t>& indices_holder) : Vector<size_t>* {query}
	+operator!=(const Vector<U>& v) : bool {query}
	+operator!=(const T val) : bool {query}
	+operator==(const Vector<U>& v) : bool {query}
	+operator==(const T val) : bool {query}
	#overlap(const Vector<U>& other) : bool {query}
	+shared() : bool {query}
	+capacity() : size_t {query}
	+findFirst(const T& value) : size_t {query}
	+findLast(const T& value) : size_t {query}
	#minMemorySize(const size_t N) : size_t {query}
	+size() : size_t {query}
	#{static} staticHelper : static const Vector
}










Vector *- - Vector









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.25+9
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>