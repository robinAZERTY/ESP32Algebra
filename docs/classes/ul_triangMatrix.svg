<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="489px" preserveAspectRatio="none" style="width:815px;height:489px;" version="1.1" viewBox="0 0 815 489" width="815px" zoomAndPan="magnify"><defs><filter height="300%" id="f1lkj0lccwezzg" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[52cf85cb2c2f5a1e50a6a7e00217dfdd]
class ul_triangMatrix--><rect fill="#FEFECE" filter="url(#f1lkj0lccwezzg)" height="470.5547" id="ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="762" x="6" y="8"/><ellipse cx="260.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M263.2188,29.6406 Q262.6406,29.9375 262,30.0781 Q261.3594,30.2344 260.6563,30.2344 Q258.1563,30.2344 256.8281,28.5938 Q255.5156,26.9375 255.5156,23.8125 Q255.5156,20.6875 256.8281,19.0313 Q258.1563,17.375 260.6563,17.375 Q261.3594,17.375 262,17.5313 Q262.6563,17.6875 263.2188,17.9844 L263.2188,20.7031 Q262.5938,20.125 262,19.8594 Q261.4063,19.5781 260.7813,19.5781 Q259.4375,19.5781 258.75,20.6563 Q258.0625,21.7188 258.0625,23.8125 Q258.0625,25.9063 258.75,26.9844 Q259.4375,28.0469 260.7813,28.0469 Q261.4063,28.0469 262,27.7813 Q262.5938,27.5 263.2188,26.9219 L263.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="280.75" y="28.1543">ul_triangMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="619" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="620" y="17.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="767" y1="40" y2="40"/><polygon fill="none" points="17,46,21,50,17,54,13,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="26" y="54.2104">staticHelper : static const ul_triangMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="767" y1="60.8047" y2="60.8047"/><ellipse cx="17" cy="71.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="26" y="75.0151">ul_triangMatrix()</text><ellipse cx="17" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="26" y="87.8198">ul_triangMatrix(const size_t order)</text><ellipse cx="17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="26" y="100.6245">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="26" y="113.4292">operator()(const size_t row, const size_t col) : T&amp; {query}</text><polygon fill="#FFFF44" points="17,118.0234,21,122.0234,17,126.0234,13,122.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="26" y="126.2339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="17,130.8281,21,134.8281,17,138.8281,13,134.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="26" y="139.0386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="26" y="151.8433">hold(const ul_triangMatrix&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="26" y="164.6479">hold(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="172" y="164.6479">&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="26" y="177.4526">holdAdd(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="193" y="177.4526">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="26" y="190.2573">holdAdd(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="424" x="193" y="190.2573">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="203.062">holdDiv(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="189" y="203.062">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="212.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="26" y="215.8667">holdInv(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="188" y="215.8667">&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="225.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="228.6714">holdMul(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="191" y="228.6714">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="238.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="241.4761">holdMul(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="571" x="191" y="241.4761">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : ul_triangMatrix*</text><ellipse cx="17" cy="251.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="254.2808">holdSub(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="194" y="254.2808">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="263.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="267.0854">holdSub(const T&amp; a, const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="265" y="267.0854">&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="276.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="279.8901">holdSub(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="424" x="194" y="279.8901">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="17" cy="289.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="26" y="292.6948">operator*=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="17" cy="302.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="305.4995">operator*=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="212" y="305.4995">&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="315.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="26" y="318.3042">operator*=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="259" y="318.3042">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="327.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="26" y="331.1089">operator+=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="17" cy="340.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="343.9136">operator+=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="215" y="343.9136">&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="26" y="356.7183">operator+=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="262" y="356.7183">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="369.5229">operator-=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="17" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="382.3276">operator-=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="210" y="382.3276">&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="395.1323">operator-=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="257" y="395.1323">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="26" y="407.937">operator/=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="17" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="26" y="420.7417">operator=(const ul_triangMatrix&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="26" y="433.5464">operator=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="206" y="433.5464">&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="26" y="446.3511">operator=(internal::tmp&lt;ul_triangMatrix&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="17" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26" y="459.1558">operator=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="253" y="459.1558">&gt;&amp;&amp; other) : ul_triangMatrix*</text><polygon fill="#FFFF44" points="17,463.75,21,467.75,17,471.75,13,467.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="26" y="471.9604">swap(ul_triangMatrix&amp; other) : ul_triangMatrix*</text><!--MD5=[f2eecb54a2793922aea70bdf03410f50]
reverse link ul_triangMatrix to ul_triangMatrix--><path d="M778.59,191.58 C794.06,205.1 803,222.4 803,243.5 C803,268.97 789.97,288.92 768.13,303.35 " fill="none" id="ul_triangMatrix&lt;-ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="768.13,183.65,770.4926,190.4631,777.6903,190.9026,775.3277,184.0896,768.13,183.65" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[60755aa562beb52e4660795b0e72f2c8]
@startuml






class ul_triangMatrix <template<typename T>> {
	+ul_triangMatrix()
	+ul_triangMatrix(const size_t order)
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const ul_triangMatrix<T>
	+hold(const ul_triangMatrix& other, const bool checkSize) : ul_triangMatrix*
	+hold(const ul_triangMatrix<U>& other, const bool checkSize) : ul_triangMatrix*
	+holdAdd(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdAdd(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize) : ul_triangMatrix*
	+holdDiv(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdInv(const ul_triangMatrix<U>& other, const bool checkSize) : ul_triangMatrix*
	+holdMul(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdMul(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize, const bool checkOverlap) : ul_triangMatrix*
	+holdSub(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdSub(const T& a, const ul_triangMatrix<U>& b, const bool checkSize) : ul_triangMatrix*
	+holdSub(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize) : ul_triangMatrix*
	+operator*=(const T& data) : ul_triangMatrix*
	+operator*=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator*=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator+=(const T& data) : ul_triangMatrix*
	+operator+=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator+=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator-=(const T& data) : ul_triangMatrix*
	+operator-=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator-=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator/=(const T& data) : ul_triangMatrix*
	+operator=(const ul_triangMatrix& other) : ul_triangMatrix*
	+operator=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator=(internal::tmp<ul_triangMatrix>&& other) : ul_triangMatrix*
	+operator=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	#swap(ul_triangMatrix& other) : ul_triangMatrix*
}










ul_triangMatrix *- - ul_triangMatrix









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.25+9
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>