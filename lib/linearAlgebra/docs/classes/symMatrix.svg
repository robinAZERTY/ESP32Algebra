<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="732px" preserveAspectRatio="none" style="width:771px;height:732px;" version="1.1" viewBox="0 0 771 732" width="771px" zoomAndPan="magnify"><defs><filter height="300%" id="f183g7cvy02a1j" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[5a4b7f41b1b9cefbc6760c6c79898884]
class symMatrix--><rect fill="#FEFECE" filter="url(#f183g7cvy02a1j)" height="713.8438" id="symMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="718" x="6" y="8"/><ellipse cx="253.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M256.2188,29.6406 Q255.6406,29.9375 255,30.0781 Q254.3594,30.2344 253.6563,30.2344 Q251.1563,30.2344 249.8281,28.5938 Q248.5156,26.9375 248.5156,23.8125 Q248.5156,20.6875 249.8281,19.0313 Q251.1563,17.375 253.6563,17.375 Q254.3594,17.375 255,17.5313 Q255.6563,17.6875 256.2188,17.9844 L256.2188,20.7031 Q255.5938,20.125 255,19.8594 Q254.4063,19.5781 253.7813,19.5781 Q252.4375,19.5781 251.75,20.6563 Q251.0625,21.7188 251.0625,23.8125 Q251.0625,25.9063 251.75,26.9844 Q252.4375,28.0469 253.7813,28.0469 Q254.4063,28.0469 255,27.7813 Q255.5938,27.5 256.2188,26.9219 L256.2188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="273.75" y="28.1543">symMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="575" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="576" y="17.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="723" y1="40" y2="40"/><polygon fill="none" points="17,46,21,50,17,54,13,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="233" x="26" y="54.2104">staticHelper : static const symMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="723" y1="60.8047" y2="60.8047"/><ellipse cx="17" cy="71.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="26" y="75.0151">symMatrix()</text><ellipse cx="17" cy="84.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="87.8198">symMatrix(const size_t order)</text><ellipse cx="17" cy="97.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="26" y="100.6245">symMatrix(const size_t rows, const size_t cols)</text><ellipse cx="17" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="26" y="113.4292">operator()(const size_t row, const size_t col) : T&amp;</text><polygon fill="#FFFF44" points="17,118.0234,21,122.0234,17,126.0234,13,122.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="26" y="126.2339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="17,130.8281,21,134.8281,17,138.8281,13,134.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="26" y="139.0386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="17" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="151.8433">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="191" y="151.8433">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="341" y="151.8433">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="17" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="164.6479">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="397" x="191" y="164.6479">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="26" y="177.4526">hold(const symMatrix&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="190.2573">hold(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="147" y="190.2573">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="203.062">hold(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="175" y="203.062">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="212.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="215.8667">holdAdd(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="168" y="215.8667">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="225.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="26" y="228.6714">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="196" y="228.6714">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="238.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="241.4761">holdInv(ldl_matrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="125" y="241.4761">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="251.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="254.2808">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="521" x="166" y="254.2808">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="17" cy="263.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="267.0854">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="194" y="267.0854">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="344" y="267.0854">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="17" cy="276.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="279.8901">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="521" x="194" y="279.8901">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="17" cy="289.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="292.6948">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="549" x="166" y="292.6948">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="17" cy="302.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="305.4995">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="397" x="194" y="305.4995">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="315.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="318.3042">holdMul(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="175" y="318.3042">&amp; a, const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="227" x="326" y="318.3042">&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="327.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="331.1089">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="169" y="331.1089">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="340.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="343.9136">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="197" y="343.9136">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="356.7183">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="402" x="169" y="356.7183">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="17" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="26" y="369.5229">operator*=(const T&amp; data) : symMatrix*</text><ellipse cx="17" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="26" y="382.3276">operator*=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="187" y="382.3276">&amp; other) : symMatrix*</text><ellipse cx="17" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="395.1323">operator*=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="234" y="395.1323">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="407.937">operator*=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="215" y="407.937">&amp; other) : symMatrix*</text><ellipse cx="17" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="26" y="420.7417">operator*=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="262" y="420.7417">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="26" y="433.5464">operator+=(const T&amp; data) : symMatrix*</text><ellipse cx="17" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26" y="446.3511">operator+=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="190" y="446.3511">&amp; other) : symMatrix*</text><ellipse cx="17" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="26" y="459.1558">operator+=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="237" y="459.1558">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26" y="471.9604">operator+=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="218" y="471.9604">&amp; other) : symMatrix*</text><ellipse cx="17" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="484.7651">operator+=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="265" y="484.7651">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26" y="497.5698">operator-=(const T&amp; data) : symMatrix*</text><ellipse cx="17" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="510.3745">operator-=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="185" y="510.3745">&amp; other) : symMatrix*</text><ellipse cx="17" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26" y="523.1792">operator-=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="232" y="523.1792">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="26" y="535.9839">operator-=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="213" y="535.9839">&amp; other) : symMatrix*</text><ellipse cx="17" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="548.7886">operator-=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="260" y="548.7886">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="26" y="561.5933">operator/=(const T&amp; data) : symMatrix*</text><ellipse cx="17" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="26" y="574.3979">operator=(const symMatrix&amp; other) : symMatrix*</text><ellipse cx="17" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="26" y="587.2026">operator=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="181" y="587.2026">&amp; other) : symMatrix*</text><ellipse cx="17" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="26" y="600.0073">operator=(internal::tmp&lt;symMatrix&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="26" y="612.812">operator=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="228" y="612.812">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="625.6167">operator=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="209" y="625.6167">&amp; other) : symMatrix*</text><ellipse cx="17" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="26" y="638.4214">operator=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="256" y="638.4214">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="17" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="651.2261">subMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="191" y="651.2261">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="341" y="651.2261">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><polygon fill="#FFFF44" points="17,655.8203,21,659.8203,17,663.8203,13,659.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="26" y="664.0308">swap(symMatrix&amp; other) : symMatrix*</text><ellipse cx="17" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="26" y="676.8354">holdAdd(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="168" y="676.8354">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="17" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="689.6401">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="166" y="689.6401">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="17" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="702.4448">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="169" y="702.4448">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="17" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="26" y="715.2495">holdSub(const T&amp; a, const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="240" y="715.2495">&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><!--MD5=[4012c05f32cfbda0c74f49bc7c65c5df]
reverse link symMatrix to symMatrix--><path d="M732.91,282.14 C749.38,303.23 759,330.84 759,365 C759,404.74 745.98,435.64 724.28,457.68 " fill="none" id="symMatrix&lt;-symMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="724.28,272.32,725.2355,279.4675,732.2007,281.3346,731.2452,274.1871,724.28,272.32" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[736c5cd6582686a7bf34759f3ec9db21]
@startuml






class symMatrix <template<typename T>> {
	+symMatrix()
	+symMatrix(const size_t order)
	+symMatrix(const size_t rows, const size_t cols)
	+operator()(const size_t row, const size_t col) : T&
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const symMatrix<T>
	+addMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+addMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+hold(const symMatrix& other, const bool checkSize) : symMatrix*
	+hold(const symMatrix<U>& other, const bool checkSize) : symMatrix*
	+hold(const rowMajorMatrix<U>& other, const bool checkSize) : symMatrix*
	+holdAdd(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdAdd(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdInv(ldl_matrix<U>& other, const bool checkSize) : symMatrix*
	+holdMul(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const symMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdMul(const triangMatrix<U>& a, const uu_triangMatrix<U>& b, const bool checkSize) : symMatrix*
	+holdSub(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdSub(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdSub(const symMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+operator*=(const T& data) : symMatrix*
	+operator*=(const symMatrix<U>& other) : symMatrix*
	+operator*=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator*=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator*=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator+=(const T& data) : symMatrix*
	+operator+=(const symMatrix<U>& other) : symMatrix*
	+operator+=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator+=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator+=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator-=(const T& data) : symMatrix*
	+operator-=(const symMatrix<U>& other) : symMatrix*
	+operator-=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator-=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator-=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator/=(const T& data) : symMatrix*
	+operator=(const symMatrix& other) : symMatrix*
	+operator=(const symMatrix<U>& other) : symMatrix*
	+operator=(internal::tmp<symMatrix>&& other) : symMatrix*
	+operator=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+subMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	#swap(symMatrix& other) : symMatrix*
	+holdAdd(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdMul(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdSub(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdSub(const T& a, const symMatrix<U>& b, const bool checkSize) : symMatrix<T>*
}










symMatrix *- - symMatrix









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.25+9
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>