<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="3713px" preserveAspectRatio="none" style="width:2963px;height:3713px;" version="1.1" viewBox="0 0 2963 3713" width="2963px" zoomAndPan="magnify"><defs><filter height="300%" id="f1k7ll8uu1yw8x" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c27d767109b3913d4718b358a17ad24a]
cluster internal--><polygon fill="#FFFFFF" filter="url(#f1k7ll8uu1yw8x)" points="1790.5,389,1856.5,389,1863.5,411.2969,2058.5,411.2969,2058.5,578,1790.5,578,1790.5,389" style="stroke: #000000; stroke-width: 1.5;"/><line style="stroke: #000000; stroke-width: 1.5;" x1="1790.5" x2="1863.5" y1="411.2969" y2="411.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="60" x="1794.5" y="403.9951">internal</text><!--MD5=[a4ba0c4bb4fd4c1ff73be1298269ade5]
class internal.tmp--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="137.6328" id="internal.tmp" style="stroke: #A80036; stroke-width: 1.5;" width="217" x="1807" y="424"/><ellipse cx="1822" cy="440" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1824.9688,445.6406 Q1824.3906,445.9375 1823.75,446.0781 Q1823.1094,446.2344 1822.4063,446.2344 Q1819.9063,446.2344 1818.5781,444.5938 Q1817.2656,442.9375 1817.2656,439.8125 Q1817.2656,436.6875 1818.5781,435.0313 Q1819.9063,433.375 1822.4063,433.375 Q1823.1094,433.375 1823.75,433.5313 Q1824.4063,433.6875 1824.9688,433.9844 L1824.9688,436.7031 Q1824.3438,436.125 1823.75,435.8594 Q1823.1563,435.5781 1822.5313,435.5781 Q1821.1875,435.5781 1820.5,436.6563 Q1819.8125,437.7188 1819.8125,439.8125 Q1819.8125,441.9063 1820.5,442.9844 Q1821.1875,444.0469 1822.5313,444.0469 Q1823.1563,444.0469 1823.75,443.7813 Q1824.3438,443.5 1824.9688,442.9219 L1824.9688,445.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="1836" y="444.1543">tmp</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="159" x="1868" y="421"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="157" x="1869" y="433.1387">template&lt;class Derived&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1808" x2="2023" y1="456" y2="456"/><ellipse cx="1818" cy="467" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1827" y="470.2104">currentlyUsed : bool</text><rect fill="none" height="6" style="stroke: #C82930; stroke-width: 1.0;" width="6" x="1815" y="476.8047"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="163" x="1827" y="483.0151">buffer : static Vector&lt;tmp*&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1808" x2="2023" y1="489.6094" y2="489.6094"/><ellipse cx="1818" cy="500.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="109" x="1827" y="503.8198">bufferSize() : size_t</text><ellipse cx="1818" cy="513.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="164" x="1827" y="516.6245">currentlyUsedCount() : size_t</text><ellipse cx="1818" cy="526.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="147" x="1827" y="529.4292">get(Args ... shape) : tmp*</text><ellipse cx="1818" cy="539.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1827" y="542.2339">release() : tmp*</text><ellipse cx="1818" cy="551.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="79" x="1827" y="555.0386">freeAll() : void</text><!--MD5=[56f3777c4a342cd8020ffcf5f59f8034]
class Matrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="496.1641" id="Matrix" style="stroke: #A80036; stroke-width: 1.5;" width="643" x="114" y="2407"/><ellipse cx="332.25" cy="2423" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M335.2188,2428.6406 Q334.6406,2428.9375 334,2429.0781 Q333.3594,2429.2344 332.6563,2429.2344 Q330.1563,2429.2344 328.8281,2427.5938 Q327.5156,2425.9375 327.5156,2422.8125 Q327.5156,2419.6875 328.8281,2418.0313 Q330.1563,2416.375 332.6563,2416.375 Q333.3594,2416.375 334,2416.5313 Q334.6563,2416.6875 335.2188,2416.9844 L335.2188,2419.7031 Q334.5938,2419.125 334,2418.8594 Q333.4063,2418.5781 332.7813,2418.5781 Q331.4375,2418.5781 330.75,2419.6563 Q330.0625,2420.7188 330.0625,2422.8125 Q330.0625,2424.9063 330.75,2425.9844 Q331.4375,2427.0469 332.7813,2427.0469 Q333.4063,2427.0469 334,2426.7813 Q334.5938,2426.5 335.2188,2425.9219 L335.2188,2428.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="37" x="352.75" y="2427.1543">Matrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="159" x="601" y="2404"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="157" x="602" y="2416.1387">template&lt;typename TT&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="115" x2="756" y1="2439" y2="2439"/><ellipse cx="125" cy="2450" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="134" y="2453.2104">T : colMajorMatrix&lt;TT&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="115" x2="756" y1="2459.8047" y2="2459.8047"/><ellipse cx="125" cy="2470.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="42" x="134" y="2474.0151">Matrix()</text><ellipse cx="125" cy="2483.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="134" y="2486.8198">Matrix(const size_t rows, const size_t cols)</text><ellipse cx="125" cy="2496.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="404" x="134" y="2499.6245">Matrix(TT* data, const size_t rows, const size_t cols, const bool share)</text><ellipse cx="125" cy="2509.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="134" y="2512.4292">Matrix(const Matrix&lt;TT&gt;&amp; other)</text><ellipse cx="125" cy="2522.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="134" y="2525.2339">Matrix(const Matrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="241" y="2525.2339">&amp; other)</text><ellipse cx="125" cy="2534.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="134" y="2538.0386">Matrix(const rowMajorMatrix&lt;TT&gt;&amp; other)</text><ellipse cx="125" cy="2547.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="134" y="2550.8433">Matrix(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="293" y="2550.8433">&amp; other)</text><ellipse cx="125" cy="2560.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="134" y="2563.6479">Matrix(const colMajorMatrix&lt;TT&gt;&amp; other)</text><ellipse cx="125" cy="2573.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="134" y="2576.4526">Matrix(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="288" y="2576.4526">&amp; other)</text><ellipse cx="125" cy="2586.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="305" x="134" y="2589.2573">Matrix(internal::tmp&lt;rowMajorMatrix&lt;TT&gt;&gt;&amp;&amp; other)</text><ellipse cx="125" cy="2598.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="300" x="134" y="2602.062">Matrix(internal::tmp&lt;colMajorMatrix&lt;TT&gt;&gt;&amp;&amp; other)</text><ellipse cx="125" cy="2611.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="134" y="2614.8667">operator*=(const U&amp; data) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2624.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="134" y="2627.6714">operator*=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="323" y="2627.6714">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2637.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="134" y="2640.4761">operator*=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="370" y="2640.4761">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2650.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="134" y="2653.2808">operator*=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="318" y="2653.2808">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2662.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="134" y="2666.0854">operator*=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="365" y="2666.0854">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2675.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="134" y="2678.8901">operator+=(const U&amp; data) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2688.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="134" y="2691.6948">operator+=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="326" y="2691.6948">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2701.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="134" y="2704.4995">operator+=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="373" y="2704.4995">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2714.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="134" y="2717.3042">operator+=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="321" y="2717.3042">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2726.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="134" y="2730.1089">operator+=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="368" y="2730.1089">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2739.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="134" y="2742.9136">operator-=(const U&amp; data) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2752.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="134" y="2755.7183">operator-=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="321" y="2755.7183">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2765.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="134" y="2768.5229">operator-=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="368" y="2768.5229">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2778.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="134" y="2781.3276">operator-=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="316" y="2781.3276">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2790.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="134" y="2794.1323">operator-=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="363" y="2794.1323">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2803.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="134" y="2806.937">operator/=(const U&amp; data) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2816.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="134" y="2819.7417">operator=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="317" y="2819.7417">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2829.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="134" y="2832.5464">operator=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="364" y="2832.5464">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2842.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="134" y="2845.3511">operator=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="132" x="312" y="2845.3511">&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2854.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="134" y="2858.1558">operator=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="359" y="2858.1558">&gt;&amp;&amp; other) : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2867.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="127" x="134" y="2870.9604">referT() : Matrix&lt;TT&gt;*</text><ellipse cx="125" cy="2880.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="617" x="134" y="2883.7651">resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : Matrix&lt;TT&gt;*</text><polygon fill="#FFFF44" points="125,2888.3594,129,2892.3594,125,2896.3594,121,2892.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="134" y="2896.5698">swap(Matrix&lt;TT&gt;&amp; other) : Matrix&lt;TT&gt;*</text><!--MD5=[205dc66f7e9b2016b3f57d76c14da5be]
class MatrixBase--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="316.8984" id="MatrixBase" style="stroke: #A80036; stroke-width: 1.5;" width="665" x="1152" y="1038"/><ellipse cx="1350.25" cy="1054" fill="#A9DCDF" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1350.3594,1049.3438 L1349.2031,1054.4219 L1351.5313,1054.4219 L1350.3594,1049.3438 Z M1348.875,1047.1094 L1351.8594,1047.1094 L1355.2188,1059.5 L1352.7656,1059.5 L1352,1056.4375 L1348.7188,1056.4375 L1347.9688,1059.5 L1345.5313,1059.5 L1348.875,1047.1094 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="68" x="1370.75" y="1058.1543">MatrixBase</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="190" x="1630" y="1035"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="188" x="1631" y="1047.1387">template&lt;typename T=float&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1153" x2="1816" y1="1070" y2="1070"/><polygon fill="none" points="1163,1076,1167,1080,1163,1084,1159,1080" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="1172" y="1084.2104">_cols : size_t</text><polygon fill="none" points="1163,1088.8047,1167,1092.8047,1163,1096.8047,1159,1092.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="1172" y="1097.0151">_rows : size_t</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1153" x2="1816" y1="1103.6094" y2="1103.6094"/><ellipse cx="1163" cy="1114.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="1172" y="1117.8198">MatrixBase()</text><ellipse cx="1163" cy="1127.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="272" x="1172" y="1130.6245">MatrixBase(const size_t rows, const size_t cols)</text><polygon fill="#FFFF44" points="1163,1135.2188,1167,1139.2188,1163,1143.2188,1159,1139.2188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="1172" y="1143.4292">checkOverlap(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="1350" y="1143.4292">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="1163,1148.0234,1167,1152.0234,1163,1156.0234,1159,1152.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1172" y="1156.2339">checkSize_add(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="1356" y="1156.2339">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="1163,1160.8281,1167,1164.8281,1163,1168.8281,1159,1164.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1172" y="1169.0386">checkSize_mul(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="283" x="1356" y="1169.0386">&amp; a, const MatrixBase&lt;V&gt;&amp; b) : MatrixBase&lt;T&gt;*</text><ellipse cx="1163" cy="1178.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="203" x="1172" y="1181.8433">fill(const T value) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="1163,1186.4375,1167,1190.4375,1163,1194.4375,1159,1190.4375" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="486" x="1172" y="1194.6479">refer(const Vector&lt;T&gt;&amp; data, const size_t rows, const size_t cols) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="1163,1199.2422,1167,1203.2422,1163,1207.2422,1159,1203.2422" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="428" x="1172" y="1207.4526">refer(const T* data, const size_t rows, const size_t cols) : MatrixBase&lt;T&gt;*</text><ellipse cx="1163" cy="1217.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="639" x="1172" y="1220.2573">resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : MatrixBase&lt;T&gt;*</text><ellipse cx="1163" cy="1229.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1172" y="1233.062">resizeLike(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="444" x="1330" y="1233.062">&amp; other, const bool deallocIfPossible, const bool saveData) : MatrixBase&lt;T&gt;*</text><polygon fill="#FFFF44" points="1163,1237.6563,1167,1241.6563,1163,1245.6563,1159,1241.6563" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="276" x="1172" y="1245.8667">swap(MatrixBase&lt;T&gt;&amp; other) : MatrixBase&lt;T&gt;*</text><ellipse cx="1163" cy="1255.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="278" x="1172" y="1258.6714">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="1163" cy="1268.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1172" y="1271.4761">operator()(const size_t row, const size_t col) : T&amp; {query}</text><ellipse cx="1163" cy="1281.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="1172" y="1284.2808">isAdditionCompatible(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1393" y="1284.2808">&amp; other) : bool {query}</text><ellipse cx="1163" cy="1293.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="1172" y="1297.0854">isMultiplicationCompatible(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1421" y="1297.0854">&amp; other) : bool {query}</text><ellipse cx="1163" cy="1306.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="1172" y="1309.8901">cols() : size_t {query}</text><polygon fill="#FFFF44" points="1163,1314.4844,1167,1318.4844,1163,1322.4844,1159,1318.4844" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="390" x="1172" y="1322.6948">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><polygon fill="#FFFF44" points="1163,1327.2891,1167,1331.2891,1163,1335.2891,1159,1331.2891" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1172" y="1335.4995">minMemorySize() : size_t {query}</text><ellipse cx="1163" cy="1345.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="1172" y="1348.3042">rows() : size_t {query}</text><!--MD5=[ea775af43a0da7cb543d6bee4ab62c40]
class Vector--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="969.9375" id="Vector" style="stroke: #A80036; stroke-width: 1.5;" width="539" x="1215" y="8"/><ellipse cx="1382.75" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1385.7188,29.6406 Q1385.1406,29.9375 1384.5,30.0781 Q1383.8594,30.2344 1383.1563,30.2344 Q1380.6563,30.2344 1379.3281,28.5938 Q1378.0156,26.9375 1378.0156,23.8125 Q1378.0156,20.6875 1379.3281,19.0313 Q1380.6563,17.375 1383.1563,17.375 Q1383.8594,17.375 1384.5,17.5313 Q1385.1563,17.6875 1385.7188,17.9844 L1385.7188,20.7031 Q1385.0938,20.125 1384.5,19.8594 Q1383.9063,19.5781 1383.2813,19.5781 Q1381.9375,19.5781 1381.25,20.6563 Q1380.5625,21.7188 1380.5625,23.8125 Q1380.5625,25.9063 1381.25,26.9844 Q1381.9375,28.0469 1383.2813,28.0469 Q1383.9063,28.0469 1384.5,27.7813 Q1385.0938,27.5 1385.7188,26.9219 L1385.7188,29.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="41" x="1403.25" y="28.1543">Vector</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="1605" y="5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="1606" y="17.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1216" x2="1753" y1="40" y2="40"/><polygon fill="none" points="1226,46,1230,50,1226,54,1222,50" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="62" x="1235" y="54.2104">_begin : T*</text><polygon fill="none" points="1226,58.8047,1230,62.8047,1226,66.8047,1222,62.8047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="52" x="1235" y="67.0151">_end : T*</text><polygon fill="none" points="1226,71.6094,1230,75.6094,1226,79.6094,1222,75.6094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="110" x="1235" y="79.8198">_endOfStorage : T*</text><polygon fill="none" points="1226,84.4141,1230,88.4141,1226,92.4141,1222,88.4141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="186" x="1235" y="92.6245">staticHelper : static const Vector</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1216" x2="1753" y1="99.2188" y2="99.2188"/><ellipse cx="1226" cy="110.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="44" x="1235" y="113.4292">Vector()</text><ellipse cx="1226" cy="123.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="1235" y="126.2339">Vector(const size_t N)</text><ellipse cx="1226" cy="135.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1235" y="139.0386">Vector(internal::tmp&lt;Vector&gt;&amp;&amp; v)</text><ellipse cx="1226" cy="148.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="1235" y="151.8433">Vector(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="43" x="1393" y="151.8433">&gt;&amp;&amp; v)</text><ellipse cx="1226" cy="161.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1235" y="164.6479">Vector(const Vector&amp; v, const bool share)</text><ellipse cx="1226" cy="174.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="283" x="1235" y="177.4526">Vector(T* begin, const size_t N, const bool share)</text><ellipse cx="1226" cy="187.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="1235" y="190.2573">~Vector()</text><ellipse cx="1226" cy="199.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="1235" y="203.062">operator[](size_t i) : T {query}</text><ellipse cx="1226" cy="212.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1235" y="215.8667">operator[](const size_t i) : T&amp;</text><ellipse cx="1226" cy="225.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="1235" y="228.6714">begin() : T* {query}</text><ellipse cx="1226" cy="238.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="104" x="1235" y="241.4761">end() : T* {query}</text><ellipse cx="1226" cy="251.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="1235" y="254.2808">dot(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="193" x="1328" y="254.2808">&amp; other, const bool checkSize) : V</text><ellipse cx="1226" cy="263.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1235" y="267.0854">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="1400" y="267.0854">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><polygon fill="#FFFF44" points="1226,271.6797,1230,275.6797,1226,279.6797,1222,275.6797" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="513" x="1235" y="279.8901">allocate(const size_t capacity, const bool deallocIfPossible, const bool saveData) : Vector*</text><ellipse cx="1226" cy="289.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1235" y="292.6948">fill(const T val) : Vector*</text><ellipse cx="1226" cy="302.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="347" x="1235" y="305.4995">hold(T* begin, const size_t N, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="315.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="303" x="1235" y="318.3042">hold(const Vector&amp; v, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="327.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1235" y="331.1089">hold(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="1334" y="331.1089">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="340.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1235" y="343.9136">holdAdd(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="1355" y="343.9136">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="353.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="1235" y="356.7183">holdAdd(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="1355" y="356.7183">&amp; v1, const T val, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="366.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="1235" y="369.5229">holdDiv(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="1351" y="369.5229">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="379.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1235" y="382.3276">holdDiv(const T val, const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="1421" y="382.3276">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="391.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="1235" y="395.1323">holdMul(const MatrixBase</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="1380" y="395.1323">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="404.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1235" y="407.937">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="330" x="1403" y="407.937">&amp; a, const Vector&lt;V&gt;&amp; b, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="417.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1235" y="420.7417">holdMul(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="1353" y="420.7417">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="430.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="1235" y="433.5464">holdMul(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="1353" y="433.5464">&amp; v1, const V val, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="443.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1235" y="446.3511">holdSub(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="342" x="1356" y="446.3511">&amp; v1, const Vector&lt;V&gt;&amp; v2, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="455.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1235" y="459.1558">holdSub(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="281" x="1356" y="459.1558">&amp; v1, const T val, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="468.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="1235" y="471.9604">holdSub(const T val, const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="204" x="1426" y="471.9604">&amp; v, const bool checkSize) : Vector*</text><ellipse cx="1226" cy="481.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="1235" y="484.7651">insert(const T&amp; value, const size_t index) : Vector*</text><ellipse cx="1226" cy="494.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="1235" y="497.5698">operator*=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="1374" y="497.5698">&amp; v) : Vector*</text><ellipse cx="1226" cy="507.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="198" x="1235" y="510.3745">operator*=(const T&amp; val) : Vector*</text><ellipse cx="1226" cy="519.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="308" x="1235" y="523.1792">operator*=(internal::tmp&lt;Vector&lt;T&gt;&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="532.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1235" y="535.9839">operator+=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="1377" y="535.9839">&amp; v) : Vector*</text><ellipse cx="1226" cy="545.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="1235" y="548.7886">operator+=(const T&amp; val) : Vector*</text><ellipse cx="1226" cy="558.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1235" y="561.5933">operator+=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="1424" y="561.5933">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="571.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1235" y="574.3979">operator-=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="1372" y="574.3979">&amp; v) : Vector*</text><ellipse cx="1226" cy="583.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1235" y="587.2026">operator-=(const T&amp; val) : Vector*</text><ellipse cx="1226" cy="596.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1235" y="600.0073">operator-=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="1419" y="600.0073">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="609.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1235" y="612.812">operator/=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="1372" y="612.812">&amp; v) : Vector*</text><ellipse cx="1226" cy="622.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="196" x="1235" y="625.6167">operator/=(const T&amp; val) : Vector*</text><ellipse cx="1226" cy="635.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1235" y="638.4214">operator/=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="1419" y="638.4214">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="648.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1235" y="651.2261">operator=(const Vector&amp; v) : Vector*</text><ellipse cx="1226" cy="660.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="1235" y="664.0308">operator=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="78" x="1368" y="664.0308">&amp; v) : Vector*</text><ellipse cx="1226" cy="673.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="1235" y="676.8354">operator=(internal::tmp&lt;Vector&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="686.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1235" y="689.6401">operator=(internal::tmp&lt;Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="97" x="1415" y="689.6401">&gt;&amp;&amp; v) : Vector*</text><ellipse cx="1226" cy="699.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="1235" y="702.4448">pop_back() : Vector*</text><ellipse cx="1226" cy="712.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1235" y="715.2495">push_back(const T&amp; value) : Vector*</text><polygon fill="#FFFF44" points="1226,719.8438,1230,723.8438,1226,727.8438,1222,723.8438" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="205" x="1235" y="728.0542">refer(const Vector&amp; other) : Vector*</text><polygon fill="#FFFF44" points="1226,732.6484,1230,736.6484,1226,740.6484,1222,736.6484" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1235" y="740.8589">refer(T* data, size_t length) : Vector*</text><ellipse cx="1226" cy="750.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1235" y="753.6636">removeAt(const size_t index) : Vector*</text><ellipse cx="1226" cy="763.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1235" y="766.4683">removeFirst(const T&amp; value) : Vector*</text><ellipse cx="1226" cy="776.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="1235" y="779.2729">removeLast(const T&amp; value) : Vector*</text><ellipse cx="1226" cy="788.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="483" x="1235" y="792.0776">resize(const size_t N, const bool deallocateIfPossible, const bool saveData) : Vector*</text><ellipse cx="1226" cy="801.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1235" y="804.8823">sort(const bool ascending) : Vector*</text><polygon fill="#FFFF44" points="1226,809.4766,1230,813.4766,1226,817.4766,1222,813.4766" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1235" y="817.687">swap(Vector&amp; other) : Vector*</text><ellipse cx="1226" cy="827.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="472" x="1235" y="830.4917">findAll(const T&amp; value, Vector&lt;size_t&gt;&amp; indices_holder) : Vector&lt;size_t&gt;* {query}</text><ellipse cx="1226" cy="840.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="136" x="1235" y="843.2964">operator!=(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="110" x="1371" y="843.2964">&amp; v) : bool {query}</text><ellipse cx="1226" cy="852.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="1235" y="856.1011">operator!=(const T val) : bool {query}</text><ellipse cx="1226" cy="865.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1235" y="868.9058">operator==(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="110" x="1377" y="868.9058">&amp; v) : bool {query}</text><ellipse cx="1226" cy="878.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="1235" y="881.7104">operator==(const T val) : bool {query}</text><polygon fill="#FFFF44" points="1226,886.3047,1230,890.3047,1226,894.3047,1222,890.3047" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="1235" y="894.5151">overlap(const Vector</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="134" x="1352" y="894.5151">&amp; other) : bool {query}</text><ellipse cx="1226" cy="904.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="134" x="1235" y="907.3198">shared() : bool {query}</text><ellipse cx="1226" cy="916.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="1235" y="920.1245">capacity() : size_t {query}</text><ellipse cx="1226" cy="929.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1235" y="932.9292">findFirst(const T&amp; value) : size_t {query}</text><ellipse cx="1226" cy="942.5234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1235" y="945.7339">findLast(const T&amp; value) : size_t {query}</text><polygon fill="#FFFF44" points="1226,950.3281,1230,954.3281,1226,958.3281,1222,954.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="270" x="1235" y="958.5386">minMemorySize(const size_t N) : size_t {query}</text><ellipse cx="1226" cy="968.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="1235" y="971.3433">size() : size_t {query}</text><!--MD5=[919351fc074032d899debac0233bd837]
class colMajorMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="739.4531" id="colMajorMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="791" x="6" y="2963"/><ellipse cx="275.75" cy="2979" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M278.7188,2984.6406 Q278.1406,2984.9375 277.5,2985.0781 Q276.8594,2985.2344 276.1563,2985.2344 Q273.6563,2985.2344 272.3281,2983.5938 Q271.0156,2981.9375 271.0156,2978.8125 Q271.0156,2975.6875 272.3281,2974.0313 Q273.6563,2972.375 276.1563,2972.375 Q276.8594,2972.375 277.5,2972.5313 Q278.1563,2972.6875 278.7188,2972.9844 L278.7188,2975.7031 Q278.0938,2975.125 277.5,2974.8594 Q276.9063,2974.5781 276.2813,2974.5781 Q274.9375,2974.5781 274.25,2975.6563 Q273.5625,2976.7188 273.5625,2978.8125 Q273.5625,2980.9063 274.25,2981.9844 Q274.9375,2983.0469 276.2813,2983.0469 Q276.9063,2983.0469 277.5,2982.7813 Q278.0938,2982.5 278.7188,2981.9219 L278.7188,2984.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="89" x="296.25" y="2983.1543">colMajorMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="648" y="2960"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="649" y="2972.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="796" y1="2995" y2="2995"/><polygon fill="none" points="17,3001,21,3005,17,3009,13,3005" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="26" y="3009.2104">staticHelper : const static colMajorMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="796" y1="3015.8047" y2="3015.8047"/><ellipse cx="17" cy="3026.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="26" y="3030.0151">colMajorMatrix()</text><ellipse cx="17" cy="3039.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="290" x="26" y="3042.8198">colMajorMatrix(const size_t rows, const size_t cols)</text><ellipse cx="17" cy="3052.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="444" x="26" y="3055.6245">colMajorMatrix(T* data, const size_t rows, const size_t cols, const bool share)</text><ellipse cx="17" cy="3065.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="249" x="26" y="3068.4292">colMajorMatrix(const colMajorMatrix&amp; other)</text><ellipse cx="17" cy="3078.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="3081.2339">colMajorMatrix(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="227" y="3081.2339">&amp; other)</text><ellipse cx="17" cy="3090.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="340" x="26" y="3094.0386">colMajorMatrix(internal::tmp&lt;colMajorMatrix&lt;T&gt;&gt;&amp;&amp; other)</text><ellipse cx="17" cy="3103.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="248" x="26" y="3106.8433">colMajorMatrix(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="67" x="274" y="3106.8433">&gt;&amp;&amp; other)</text><ellipse cx="17" cy="3116.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="26" y="3119.6479">colMajorMatrix(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="232" y="3119.6479">&amp; other)</text><ellipse cx="17" cy="3129.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="253" x="26" y="3132.4526">colMajorMatrix(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="67" x="279" y="3132.4526">&gt;&amp;&amp; other)</text><ellipse cx="17" cy="3142.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="26" y="3145.2573">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="17" cy="3154.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="417" x="26" y="3158.062">hold(const colMajorMatrix&amp; other, const bool checkSize) : colMajorMatrix*</text><ellipse cx="17" cy="3167.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="391" x="26" y="3170.8667">operator=(internal::tmp&lt;colMajorMatrix&gt;&amp;&amp; other) : colMajorMatrix*</text><ellipse cx="17" cy="3180.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26" y="3183.6714">hold(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="298" x="170" y="3183.6714">&amp; other, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3193.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="26" y="3196.4761">hold(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="298" x="175" y="3196.4761">&amp; other, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3206.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="3209.2808">holdAdd(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="346" x="191" y="3209.2808">&amp; a, const T&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3218.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="3222.0854">holdAdd(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="445" x="191" y="3222.0854">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3231.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="26" y="3234.8901">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="196" y="3234.8901">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3244.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="3247.6948">holdAdd(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="191" y="3247.6948">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3257.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="3260.4995">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="346" x="189" y="3260.4995">&amp; a, const T&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3270.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="3273.3042">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="592" x="189" y="3273.3042">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3282.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="3286.1089">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="597" x="194" y="3286.1089">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3295.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="3298.9136">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="597" x="189" y="3298.9136">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3308.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="3311.7183">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="592" x="194" y="3311.7183">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3321.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="3324.5229">holdSub(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="346" x="192" y="3324.5229">&amp; a, const T&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3334.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="26" y="3337.3276">holdSub(const T&amp; a, const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="263" y="3337.3276">&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3346.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="3350.1323">holdSub(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="445" x="192" y="3350.1323">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3359.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="3362.937">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="197" y="3362.937">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3372.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="26" y="3375.7417">holdSub(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="192" y="3375.7417">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3385.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="3388.5464">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="445" x="197" y="3388.5464">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3398.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="277" x="26" y="3401.3511">operator*=(const T&amp; data) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3410.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="26" y="3414.1558">operator*=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="210" y="3414.1558">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3423.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="3426.9604">operator*=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="257" y="3426.9604">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3436.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="3439.7651">operator*=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="215" y="3439.7651">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3449.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="26" y="3452.5698">operator*=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="262" y="3452.5698">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3462.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="280" x="26" y="3465.3745">operator+=(const T&amp; data) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3474.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="26" y="3478.1792">operator+=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="213" y="3478.1792">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3487.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="3490.9839">operator+=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="260" y="3490.9839">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3500.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26" y="3503.7886">operator+=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="218" y="3503.7886">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3513.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="3516.5933">operator+=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="265" y="3516.5933">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3526.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26" y="3529.3979">operator-=(const T&amp; data) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3538.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="26" y="3542.2026">operator-=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="208" y="3542.2026">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3551.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="26" y="3555.0073">operator-=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="255" y="3555.0073">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3564.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="26" y="3567.812">operator-=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="213" y="3567.812">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3577.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="26" y="3580.6167">operator-=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="260" y="3580.6167">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3590.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="275" x="26" y="3593.4214">operator/=(const T&amp; data) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3603.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="375" x="26" y="3606.2261">operator=(const colMajorMatrix&lt;T&gt;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3615.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26" y="3619.0308">operator=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="204" y="3619.0308">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3628.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="26" y="3631.8354">operator=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="251" y="3631.8354">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3641.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="3644.6401">operator=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="209" y="3644.6401">&amp; other) : colMajorMatrix&lt;T&gt;*</text><ellipse cx="17" cy="3654.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="26" y="3657.4448">operator=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="191" x="256" y="3657.4448">&gt;&amp;&amp; other) : colMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="17,3662.0391,21,3666.0391,17,3670.0391,13,3666.0391" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="310" x="26" y="3670.2495">refer(colMajorMatrix&lt;T&gt;&amp; other) : colMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="17,3674.8438,21,3678.8438,17,3682.8438,13,3678.8438" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="312" x="26" y="3683.0542">swap(colMajorMatrix&lt;T&gt;&amp; other) : colMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="17,3687.6484,21,3691.6484,17,3695.6484,13,3691.6484" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="26" y="3695.8589">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><!--MD5=[45a3e78decde2fd5dd9d462a38bf1e42]
class diagMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="508.9688" id="diagMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="568" x="850.5" y="3078"/><ellipse cx="1021.25" cy="3094" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1024.2188,3099.6406 Q1023.6406,3099.9375 1023,3100.0781 Q1022.3594,3100.2344 1021.6563,3100.2344 Q1019.1563,3100.2344 1017.8281,3098.5938 Q1016.5156,3096.9375 1016.5156,3093.8125 Q1016.5156,3090.6875 1017.8281,3089.0313 Q1019.1563,3087.375 1021.6563,3087.375 Q1022.3594,3087.375 1023,3087.5313 Q1023.6563,3087.6875 1024.2188,3087.9844 L1024.2188,3090.7031 Q1023.5938,3090.125 1023,3089.8594 Q1022.4063,3089.5781 1021.7813,3089.5781 Q1020.4375,3089.5781 1019.75,3090.6563 Q1019.0625,3091.7188 1019.0625,3093.8125 Q1019.0625,3095.9063 1019.75,3096.9844 Q1020.4375,3098.0469 1021.7813,3098.0469 Q1022.4063,3098.0469 1023,3097.7813 Q1023.5938,3097.5 1024.2188,3096.9219 L1024.2188,3099.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="64" x="1041.75" y="3098.1543">diagMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="1269.5" y="3075"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="1270.5" y="3087.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="851.5" x2="1417.5" y1="3110" y2="3110"/><polygon fill="none" points="861.5,3116,865.5,3120,861.5,3124,857.5,3120" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="233" x="870.5" y="3124.2104">staticHelper : static const diagMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="851.5" x2="1417.5" y1="3130.8047" y2="3130.8047"/><ellipse cx="861.5" cy="3141.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="870.5" y="3145.0151">diagMatrix(const size_t rows, const size_t cols)</text><ellipse cx="861.5" cy="3154.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="870.5" y="3157.8198">diagMatrix(const size_t size)</text><ellipse cx="861.5" cy="3167.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="870.5" y="3170.6245">diagMatrix()</text><ellipse cx="861.5" cy="3180.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="870.5" y="3183.4292">det() : T {query}</text><ellipse cx="861.5" cy="3193.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="870.5" y="3196.2339">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="861.5" cy="3205.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="870.5" y="3209.0386">operator()(const size_t row, const size_t col) : T&amp; {query}</text><ellipse cx="861.5" cy="3218.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="870.5" y="3221.8433">holdInv(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="1007.5" y="3221.8433">&amp; other, const bool checkSize) : diagMatrix*</text><ellipse cx="861.5" cy="3231.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="870.5" y="3234.6479">operator*=(const T&amp; data) : diagMatrix*</text><ellipse cx="861.5" cy="3244.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="870.5" y="3247.4526">operator*=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1031.5" y="3247.4526">&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3257.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="870.5" y="3260.2573">operator*=(internal::tmp&lt;diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1078.5" y="3260.2573">&gt;&amp;&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3269.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="870.5" y="3273.062">operator+=(const T&amp; data) : diagMatrix*</text><ellipse cx="861.5" cy="3282.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="870.5" y="3285.8667">operator+=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1034.5" y="3285.8667">&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3295.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="870.5" y="3298.6714">operator+=(internal::tmp&lt;diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1081.5" y="3298.6714">&gt;&amp;&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3308.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="870.5" y="3311.4761">operator-=(const T&amp; data) : diagMatrix*</text><ellipse cx="861.5" cy="3321.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="870.5" y="3324.2808">operator-=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1029.5" y="3324.2808">&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3333.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="870.5" y="3337.0854">operator-=(internal::tmp&lt;diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1076.5" y="3337.0854">&gt;&amp;&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3346.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="870.5" y="3349.8901">operator/=(const T&amp; data) : diagMatrix*</text><ellipse cx="861.5" cy="3359.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="870.5" y="3362.6948">operator=(const diagMatrix&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3372.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="870.5" y="3375.4995">operator=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1025.5" y="3375.4995">&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3385.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="870.5" y="3388.3042">operator=(internal::tmp&lt;diagMatrix&gt;&amp;&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3397.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="870.5" y="3401.1089">operator=(internal::tmp&lt;diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1072.5" y="3401.1089">&gt;&amp;&amp; other) : diagMatrix*</text><ellipse cx="861.5" cy="3410.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="870.5" y="3413.9136">checkIsSquare() : diagMatrix&lt;T&gt;* {query}</text><ellipse cx="861.5" cy="3423.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="870.5" y="3426.7183">hold(const diagMatrix&lt;T&gt;&amp; other, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3436.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="870.5" y="3439.5229">hold(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="991.5" y="3439.5229">&amp; other, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3449.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="870.5" y="3452.3276">holdAdd(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1012.5" y="3452.3276">&amp; a, const T&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3461.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="870.5" y="3465.1323">holdAdd(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="1012.5" y="3465.1323">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3474.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="870.5" y="3477.937">holdDiv(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1008.5" y="3477.937">&amp; a, const T&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3487.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="207" x="870.5" y="3490.7417">holdInv(const T val, const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="1077.5" y="3490.7417">&amp; other, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3500.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="870.5" y="3503.5464">holdMul(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1010.5" y="3503.5464">&amp; a, const T&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3513.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="870.5" y="3516.3511">holdMul(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="1010.5" y="3516.3511">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3525.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="870.5" y="3529.1558">holdSub(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1013.5" y="3529.1558">&amp; a, const T&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3538.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="870.5" y="3541.9604">holdSub(const T&amp; a, const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="1084.5" y="3541.9604">&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><ellipse cx="861.5" cy="3551.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="870.5" y="3554.7651">holdSub(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="399" x="1013.5" y="3554.7651">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : diagMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="861.5,3559.3594,865.5,3563.3594,861.5,3567.3594,857.5,3563.3594" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="870.5" y="3567.5698">swap(diagMatrix&lt;T&gt;&amp; other) : diagMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="861.5,3572.1641,865.5,3576.1641,861.5,3580.1641,857.5,3576.1641" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="870.5" y="3580.3745">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><!--MD5=[3281a24fdf4c1ef146bdf918d66ff719]
class ldl_matrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="150.4375" id="ldl_matrix" style="stroke: #A80036; stroke-width: 1.5;" width="558" x="1254.5" y="2580"/><ellipse cx="1423.25" cy="2596" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1426.2188,2601.6406 Q1425.6406,2601.9375 1425,2602.0781 Q1424.3594,2602.2344 1423.6563,2602.2344 Q1421.1563,2602.2344 1419.8281,2600.5938 Q1418.5156,2598.9375 1418.5156,2595.8125 Q1418.5156,2592.6875 1419.8281,2591.0313 Q1421.1563,2589.375 1423.6563,2589.375 Q1424.3594,2589.375 1425,2589.5313 Q1425.6563,2589.6875 1426.2188,2589.9844 L1426.2188,2592.7031 Q1425.5938,2592.125 1425,2591.8594 Q1424.4063,2591.5781 1423.7813,2591.5781 Q1422.4375,2591.5781 1421.75,2592.6563 Q1421.0625,2593.7188 1421.0625,2595.8125 Q1421.0625,2597.9063 1421.75,2598.9844 Q1422.4375,2600.0469 1423.7813,2600.0469 Q1424.4063,2600.0469 1425,2599.7813 Q1425.5938,2599.5 1426.2188,2598.9219 L1426.2188,2601.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="58" x="1443.75" y="2600.1543">ldl_matrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="1663.5" y="2577"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="1664.5" y="2589.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1255.5" x2="1811.5" y1="2612" y2="2612"/><ellipse cx="1265.5" cy="2623" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="1274.5" y="2626.2104">D : diagMatrix&lt;T&gt;</text><ellipse cx="1265.5" cy="2635.8047" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="126" x="1274.5" y="2639.0151">L : ul_triangMatrix&lt;T&gt;</text><ellipse cx="1265.5" cy="2648.6094" fill="none" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="1274.5" y="2651.8198">LT : uu_triangMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1255.5" x2="1811.5" y1="2658.4141" y2="2658.4141"/><ellipse cx="1265.5" cy="2669.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="1274.5" y="2672.6245">ldl_matrix()</text><ellipse cx="1265.5" cy="2682.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1274.5" y="2685.4292">ldl_matrix(const size_t order)</text><ellipse cx="1265.5" cy="2695.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="1274.5" y="2698.2339">decompose() : ldl_matrix&lt;T&gt;*</text><ellipse cx="1265.5" cy="2707.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="1274.5" y="2711.0386">referT() : ldl_matrix&lt;T&gt;*</text><ellipse cx="1265.5" cy="2720.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="532" x="1274.5" y="2723.8433">resize(const size_t order, const bool deallocIfPossible, const bool saveData) : ldl_matrix&lt;T&gt;*</text><!--MD5=[3b5fb43dc39f5527a1825b49f3dda257]
class rowMajorMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="931.5234" id="rowMajorMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="796" x="108.5" y="1415"/><ellipse cx="378.75" cy="1431" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M381.7188,1436.6406 Q381.1406,1436.9375 380.5,1437.0781 Q379.8594,1437.2344 379.1563,1437.2344 Q376.6563,1437.2344 375.3281,1435.5938 Q374.0156,1433.9375 374.0156,1430.8125 Q374.0156,1427.6875 375.3281,1426.0313 Q376.6563,1424.375 379.1563,1424.375 Q379.8594,1424.375 380.5,1424.5313 Q381.1563,1424.6875 381.7188,1424.9844 L381.7188,1427.7031 Q381.0938,1427.125 380.5,1426.8594 Q379.9063,1426.5781 379.2813,1426.5781 Q377.9375,1426.5781 377.25,1427.6563 Q376.5625,1428.7188 376.5625,1430.8125 Q376.5625,1432.9063 377.25,1433.9844 Q377.9375,1435.0469 379.2813,1435.0469 Q379.9063,1435.0469 380.5,1434.7813 Q381.0938,1434.5 381.7188,1433.9219 L381.7188,1436.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="93" x="399.25" y="1435.1543">rowMajorMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="755.5" y="1412"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="756.5" y="1424.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="109.5" x2="903.5" y1="1447" y2="1447"/><polygon fill="none" points="119.5,1453,123.5,1457,119.5,1461,115.5,1457" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="261" x="128.5" y="1461.2104">staticHelper : static const rowMajorMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="109.5" x2="903.5" y1="1467.8047" y2="1467.8047"/><ellipse cx="119.5" cy="1478.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="128.5" y="1482.0151">rowMajorMatrix()</text><ellipse cx="119.5" cy="1491.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="295" x="128.5" y="1494.8198">rowMajorMatrix(const size_t rows, const size_t cols)</text><ellipse cx="119.5" cy="1504.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="449" x="128.5" y="1507.6245">rowMajorMatrix(T* data, const size_t rows, const size_t cols, const bool share)</text><ellipse cx="119.5" cy="1517.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="259" x="128.5" y="1520.4292">rowMajorMatrix(const rowMajorMatrix&amp; other)</text><ellipse cx="119.5" cy="1530.0234" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="128.5" y="1533.2339">rowMajorMatrix(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="339.5" y="1533.2339">&amp; other)</text><ellipse cx="119.5" cy="1542.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="350" x="128.5" y="1546.0386">rowMajorMatrix(internal::tmp&lt;rowMajorMatrix&lt;T&gt;&gt;&amp;&amp; other)</text><ellipse cx="119.5" cy="1555.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="128.5" y="1558.8433">rowMajorMatrix(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="67" x="386.5" y="1558.8433">&gt;&amp;&amp; other)</text><ellipse cx="119.5" cy="1568.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="128.5" y="1571.6479">rowMajorMatrix(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="48" x="334.5" y="1571.6479">&amp; other)</text><ellipse cx="119.5" cy="1581.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="288" x="128.5" y="1584.4526">rowMajorMatrix(const internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="57" x="416.5" y="1584.4526">&gt;&amp; other)</text><ellipse cx="119.5" cy="1594.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="128.5" y="1597.2573">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="119.5" cy="1606.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="128.5" y="1610.062">operator()(const size_t row, const size_t col) : T&amp; {query}</text><ellipse cx="119.5" cy="1619.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="427" x="128.5" y="1622.8667">hold(const rowMajorMatrix&amp; other, const bool checkSize) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1632.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="128.5" y="1635.6714">operator*=(const T&amp; data) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1645.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="260" x="128.5" y="1648.4761">operator+=(const T&amp; data) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1658.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="128.5" y="1661.2808">operator-=(const T&amp; data) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1670.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="255" x="128.5" y="1674.0854">operator/=(const T&amp; data) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1683.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="401" x="128.5" y="1686.8901">operator=(internal::tmp&lt;rowMajorMatrix&gt;&amp;&amp; other) : rowMajorMatrix*</text><ellipse cx="119.5" cy="1696.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="128.5" y="1699.6948">hold(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="303" x="277.5" y="1699.6948">&amp; other, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1709.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="128.5" y="1712.4995">hold(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="303" x="272.5" y="1712.4995">&amp; other, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1722.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="128.5" y="1725.3042">hold(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="303" x="249.5" y="1725.3042">&amp; other, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1734.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="128.5" y="1738.1089">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="351" x="298.5" y="1738.1089">&amp; a, const T&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1747.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="128.5" y="1750.9136">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="298.5" y="1750.9136">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1760.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="128.5" y="1763.7183">holdAdd(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="293.5" y="1763.7183">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1773.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="128.5" y="1776.5229">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="298.5" y="1776.5229">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1786.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="128.5" y="1789.3276">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="298.5" y="1789.3276">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1798.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="128.5" y="1802.1323">holdDiv(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="294.5" y="1802.1323">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1811.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="128.5" y="1814.937">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="351" x="296.5" y="1814.937">&amp; a, const T&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1824.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="128.5" y="1827.7417">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="602" x="296.5" y="1827.7417">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1837.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="128.5" y="1840.5464">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="597" x="291.5" y="1840.5464">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1850.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="128.5" y="1853.3511">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="597" x="296.5" y="1853.3511">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1862.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="128.5" y="1866.1558">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="602" x="291.5" y="1866.1558">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1875.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="128.5" y="1878.9604">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="296.5" y="1878.9604">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1888.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="128.5" y="1891.7651">holdMul(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="268.5" y="1891.7651">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1901.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="128.5" y="1904.5698">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="296.5" y="1904.5698">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1914.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="128.5" y="1917.3745">holdMul(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="291.5" y="1917.3745">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1926.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="128.5" y="1930.1792">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="351" x="299.5" y="1930.1792">&amp; a, const T&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1939.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="242" x="128.5" y="1942.9839">holdSub(const T&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="280" x="370.5" y="1942.9839">&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1952.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="128.5" y="1955.7886">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="299.5" y="1955.7886">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1965.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="128.5" y="1968.5933">holdSub(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="294.5" y="1968.5933">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1978.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="128.5" y="1981.3979">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="450" x="299.5" y="1981.3979">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="1990.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="166" x="128.5" y="1994.2026">holdSub(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="294.5" y="1994.2026">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2003.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="128.5" y="2007.0073">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="427" x="299.5" y="2007.0073">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2016.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="128.5" y="2019.812">holdSub(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="455" x="271.5" y="2019.812">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2029.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="128.5" y="2032.6167">operator*=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="317.5" y="2032.6167">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2042.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="128.5" y="2045.4214">operator*=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="364.5" y="2045.4214">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2055.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="128.5" y="2058.2261">operator*=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="312.5" y="2058.2261">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2067.8203" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="128.5" y="2071.0308">operator*=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="359.5" y="2071.0308">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2080.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="128.5" y="2083.8354">operator*=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="289.5" y="2083.8354">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2093.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="128.5" y="2096.6401">operator+=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="320.5" y="2096.6401">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2106.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="128.5" y="2109.4448">operator+=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="367.5" y="2109.4448">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2119.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="128.5" y="2122.2495">operator+=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="315.5" y="2122.2495">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2131.8438" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="128.5" y="2135.0542">operator+=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="362.5" y="2135.0542">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2144.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="128.5" y="2147.8589">operator+=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="292.5" y="2147.8589">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2157.4531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="128.5" y="2160.6636">operator-=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="315.5" y="2160.6636">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2170.2578" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="128.5" y="2173.4683">operator-=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="362.5" y="2173.4683">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2183.0625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="182" x="128.5" y="2186.2729">operator-=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="310.5" y="2186.2729">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2195.8672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="128.5" y="2199.0776">operator-=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="357.5" y="2199.0776">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2208.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="128.5" y="2211.8823">operator-=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="287.5" y="2211.8823">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2221.4766" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="128.5" y="2224.687">operator/=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="287.5" y="2224.687">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2234.2813" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="385" x="128.5" y="2237.4917">operator=(const rowMajorMatrix&lt;T&gt;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2247.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="128.5" y="2250.2964">operator=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="311.5" y="2250.2964">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2259.8906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="128.5" y="2263.1011">operator=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="358.5" y="2263.1011">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2272.6953" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="128.5" y="2275.9058">operator=(const colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="306.5" y="2275.9058">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2285.5" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="225" x="128.5" y="2288.7104">operator=(internal::tmp&lt;colMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="196" x="353.5" y="2288.7104">&gt;&amp;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><ellipse cx="119.5" cy="2298.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="128.5" y="2301.5151">operator=(const diagMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="177" x="283.5" y="2301.5151">&amp; other) : rowMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="119.5,2306.1094,123.5,2310.1094,119.5,2314.1094,115.5,2310.1094" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="320" x="128.5" y="2314.3198">refer(rowMajorMatrix&lt;T&gt;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="119.5,2318.9141,123.5,2322.9141,119.5,2326.9141,115.5,2322.9141" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="322" x="128.5" y="2327.1245">swap(rowMajorMatrix&lt;T&gt;&amp; other) : rowMajorMatrix&lt;T&gt;*</text><polygon fill="#FFFF44" points="119.5,2331.7188,123.5,2335.7188,119.5,2339.7188,115.5,2335.7188" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="128.5" y="2339.9292">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><!--MD5=[5a4b7f41b1b9cefbc6760c6c79898884]
class symMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="713.8438" id="symMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="718" x="1125.5" y="1524"/><ellipse cx="1372.75" cy="1540" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1375.7188,1545.6406 Q1375.1406,1545.9375 1374.5,1546.0781 Q1373.8594,1546.2344 1373.1563,1546.2344 Q1370.6563,1546.2344 1369.3281,1544.5938 Q1368.0156,1542.9375 1368.0156,1539.8125 Q1368.0156,1536.6875 1369.3281,1535.0313 Q1370.6563,1533.375 1373.1563,1533.375 Q1373.8594,1533.375 1374.5,1533.5313 Q1375.1563,1533.6875 1375.7188,1533.9844 L1375.7188,1536.7031 Q1375.0938,1536.125 1374.5,1535.8594 Q1373.9063,1535.5781 1373.2813,1535.5781 Q1371.9375,1535.5781 1371.25,1536.6563 Q1370.5625,1537.7188 1370.5625,1539.8125 Q1370.5625,1541.9063 1371.25,1542.9844 Q1371.9375,1544.0469 1373.2813,1544.0469 Q1373.9063,1544.0469 1374.5,1543.7813 Q1375.0938,1543.5 1375.7188,1542.9219 L1375.7188,1545.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="61" x="1393.25" y="1544.1543">symMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="1694.5" y="1521"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="1695.5" y="1533.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1126.5" x2="1842.5" y1="1556" y2="1556"/><polygon fill="none" points="1136.5,1562,1140.5,1566,1136.5,1570,1132.5,1566" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="233" x="1145.5" y="1570.2104">staticHelper : static const symMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1126.5" x2="1842.5" y1="1576.8047" y2="1576.8047"/><ellipse cx="1136.5" cy="1587.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="66" x="1145.5" y="1591.0151">symMatrix()</text><ellipse cx="1136.5" cy="1600.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1145.5" y="1603.8198">symMatrix(const size_t order)</text><ellipse cx="1136.5" cy="1613.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="267" x="1145.5" y="1616.6245">symMatrix(const size_t rows, const size_t cols)</text><ellipse cx="1136.5" cy="1626.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1145.5" y="1629.4292">operator()(const size_t row, const size_t col) : T&amp;</text><polygon fill="#FFFF44" points="1136.5,1634.0234,1140.5,1638.0234,1136.5,1642.0234,1132.5,1638.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1145.5" y="1642.2339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="1136.5,1646.8281,1140.5,1650.8281,1136.5,1654.8281,1132.5,1650.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="1145.5" y="1655.0386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="1136.5" cy="1664.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1145.5" y="1667.8433">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="1310.5" y="1667.8433">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1460.5" y="1667.8433">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="1136.5" cy="1677.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1145.5" y="1680.6479">addMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="397" x="1310.5" y="1680.6479">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1690.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="371" x="1145.5" y="1693.4526">hold(const symMatrix&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1703.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="1145.5" y="1706.2573">hold(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="1266.5" y="1706.2573">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1715.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1145.5" y="1719.062">hold(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="1294.5" y="1719.062">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1728.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1145.5" y="1731.8667">holdAdd(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1287.5" y="1731.8667">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1741.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="1145.5" y="1744.6714">holdAdd(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1315.5" y="1744.6714">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1754.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="1145.5" y="1757.4761">holdInv(ldl_matrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="250" x="1244.5" y="1757.4761">&amp; other, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1767.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1145.5" y="1770.2808">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="521" x="1285.5" y="1770.2808">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="1136.5" cy="1779.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1145.5" y="1783.0854">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="1313.5" y="1783.0854">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1463.5" y="1783.0854">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="1136.5" cy="1792.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1145.5" y="1795.8901">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="521" x="1313.5" y="1795.8901">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="1136.5" cy="1805.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1145.5" y="1808.6948">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="549" x="1285.5" y="1808.6948">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><ellipse cx="1136.5" cy="1818.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1145.5" y="1821.4995">holdMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="397" x="1313.5" y="1821.4995">&amp; a, const colMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1831.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="1145.5" y="1834.3042">holdMul(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="151" x="1294.5" y="1834.3042">&amp; a, const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="227" x="1445.5" y="1834.3042">&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1843.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1145.5" y="1847.1089">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1288.5" y="1847.1089">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1856.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="1145.5" y="1859.9136">holdSub(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1316.5" y="1859.9136">&amp; a, const symMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1869.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1145.5" y="1872.7183">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="402" x="1288.5" y="1872.7183">&amp; a, const rowMajorMatrix&lt;V&gt;&amp; b, const bool checkSize) : symMatrix*</text><ellipse cx="1136.5" cy="1882.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="229" x="1145.5" y="1885.5229">operator*=(const T&amp; data) : symMatrix*</text><ellipse cx="1136.5" cy="1895.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="1145.5" y="1898.3276">operator*=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1306.5" y="1898.3276">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1907.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="1145.5" y="1911.1323">operator*=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1353.5" y="1911.1323">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1920.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1145.5" y="1923.937">operator*=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1334.5" y="1923.937">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1933.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1145.5" y="1936.7417">operator*=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1381.5" y="1936.7417">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1946.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="232" x="1145.5" y="1949.5464">operator+=(const T&amp; data) : symMatrix*</text><ellipse cx="1136.5" cy="1959.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="1145.5" y="1962.3511">operator+=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1309.5" y="1962.3511">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1971.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="1145.5" y="1975.1558">operator+=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1356.5" y="1975.1558">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1984.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="1145.5" y="1987.9604">operator+=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1337.5" y="1987.9604">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="1997.5547" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1145.5" y="2000.7651">operator+=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1384.5" y="2000.7651">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2010.3594" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1145.5" y="2013.5698">operator-=(const T&amp; data) : symMatrix*</text><ellipse cx="1136.5" cy="2023.1641" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="1145.5" y="2026.3745">operator-=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1304.5" y="2026.3745">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2035.9688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="206" x="1145.5" y="2039.1792">operator-=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1351.5" y="2039.1792">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2048.7734" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="187" x="1145.5" y="2051.9839">operator-=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1332.5" y="2051.9839">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2061.5781" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="1145.5" y="2064.7886">operator-=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1379.5" y="2064.7886">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2074.3828" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1145.5" y="2077.5933">operator/=(const T&amp; data) : symMatrix*</text><ellipse cx="1136.5" cy="2087.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="279" x="1145.5" y="2090.3979">operator=(const symMatrix&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2099.9922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="1145.5" y="2103.2026">operator=(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1300.5" y="2103.2026">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2112.7969" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="345" x="1145.5" y="2116.0073">operator=(internal::tmp&lt;symMatrix&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2125.6016" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="202" x="1145.5" y="2128.812">operator=(internal::tmp&lt;symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1347.5" y="2128.812">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2138.4063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="1145.5" y="2141.6167">operator=(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="124" x="1328.5" y="2141.6167">&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2151.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="1145.5" y="2154.4214">operator=(internal::tmp&lt;rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="143" x="1375.5" y="2154.4214">&gt;&amp;&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2164.0156" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1145.5" y="2167.2261">subMul(const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="1310.5" y="2167.2261">&amp; a, const rowMajorMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="374" x="1460.5" y="2167.2261">&amp; b, const bool checkSize, const bool checkOverlap) : symMatrix*</text><polygon fill="#FFFF44" points="1136.5,2171.8203,1140.5,2175.8203,1136.5,2179.8203,1132.5,2175.8203" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="216" x="1145.5" y="2180.0308">swap(symMatrix&amp; other) : symMatrix*</text><ellipse cx="1136.5" cy="2189.625" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="142" x="1145.5" y="2192.8354">holdAdd(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1287.5" y="2192.8354">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="1136.5" cy="2202.4297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="1145.5" y="2205.6401">holdMul(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1285.5" y="2205.6401">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="1136.5" cy="2215.2344" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="1145.5" y="2218.4448">holdSub(const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1288.5" y="2218.4448">&amp; a, const T&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><ellipse cx="1136.5" cy="2228.0391" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="214" x="1145.5" y="2231.2495">holdSub(const T&amp; a, const symMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="1359.5" y="2231.2495">&amp; b, const bool checkSize) : symMatrix&lt;T&gt;*</text><!--MD5=[4e0d036a3e35063714acbbaa3fb465be]
class triangMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="470.5547" id="triangMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="714" x="2038.5" y="1645.5"/><ellipse cx="2277.25" cy="1661.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2280.2188,1667.1406 Q2279.6406,1667.4375 2279,1667.5781 Q2278.3594,1667.7344 2277.6563,1667.7344 Q2275.1563,1667.7344 2273.8281,1666.0938 Q2272.5156,1664.4375 2272.5156,1661.3125 Q2272.5156,1658.1875 2273.8281,1656.5313 Q2275.1563,1654.875 2277.6563,1654.875 Q2278.3594,1654.875 2279,1655.0313 Q2279.6563,1655.1875 2280.2188,1655.4844 L2280.2188,1658.2031 Q2279.5938,1657.625 2279,1657.3594 Q2278.4063,1657.0781 2277.7813,1657.0781 Q2276.4375,1657.0781 2275.75,1658.1563 Q2275.0625,1659.2188 2275.0625,1661.3125 Q2275.0625,1663.4063 2275.75,1664.4844 Q2276.4375,1665.5469 2277.7813,1665.5469 Q2278.4063,1665.5469 2279,1665.2813 Q2279.5938,1665 2280.2188,1664.4219 L2280.2188,1667.1406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="74" x="2297.75" y="1665.6543">triangMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="2603.5" y="1642.5"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="2604.5" y="1654.6387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2039.5" x2="2751.5" y1="1677.5" y2="1677.5"/><polygon fill="none" points="2049.5,1683.5,2053.5,1687.5,2049.5,1691.5,2045.5,1687.5" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="242" x="2058.5" y="1691.7104">staticHelper : static const triangMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2039.5" x2="2751.5" y1="1698.3047" y2="1698.3047"/><ellipse cx="2049.5" cy="1709.3047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="2058.5" y="1712.5151">triangMatrix()</text><ellipse cx="2049.5" cy="1722.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="2058.5" y="1725.3198">triangMatrix(const size_t order)</text><ellipse cx="2049.5" cy="1734.9141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2058.5" y="1738.1245">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="2049.5" cy="1747.7188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2058.5" y="1750.9292">operator()(const size_t row, const size_t col) : T&amp; {query}</text><polygon fill="#FFFF44" points="2049.5,1755.5234,2053.5,1759.5234,2049.5,1763.5234,2045.5,1759.5234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2058.5" y="1763.7339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="2049.5,1768.3281,2053.5,1772.3281,2049.5,1776.3281,2045.5,1772.3281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="2058.5" y="1776.5386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="2049.5" cy="1786.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="389" x="2058.5" y="1789.3433">hold(const triangMatrix&amp; other, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1798.9375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="130" x="2058.5" y="1802.1479">hold(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="259" x="2188.5" y="1802.1479">&amp; other, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1811.7422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2058.5" y="1814.9526">holdAdd(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="307" x="2209.5" y="1814.9526">&amp; a, const T&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1824.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="2058.5" y="1827.7573">holdAdd(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="392" x="2209.5" y="1827.7573">&amp; a, const triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1837.3516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="147" x="2058.5" y="1840.562">holdDiv(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="307" x="2205.5" y="1840.562">&amp; a, const T&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1850.1563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2058.5" y="1853.3667">holdMul(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="307" x="2207.5" y="1853.3667">&amp; a, const T&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1862.9609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="2058.5" y="1866.1714">holdMul(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="539" x="2207.5" y="1866.1714">&amp; a, const triangMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : triangMatrix*</text><ellipse cx="2049.5" cy="1875.7656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="2058.5" y="1878.9761">holdMul(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="383" x="2223.5" y="1878.9761">&amp; a, const diagMatrix&lt;V&gt;&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1888.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2058.5" y="1891.7808">holdSub(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="307" x="2210.5" y="1891.7808">&amp; a, const T&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1901.375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="223" x="2058.5" y="1904.5854">holdSub(const T&amp; a, const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="236" x="2281.5" y="1904.5854">&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1914.1797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="2058.5" y="1917.3901">holdSub(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="392" x="2210.5" y="1917.3901">&amp; a, const triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : triangMatrix*</text><ellipse cx="2049.5" cy="1926.9844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="2058.5" y="1930.1948">operator*=(const T&amp; data) : triangMatrix*</text><ellipse cx="2049.5" cy="1939.7891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="2058.5" y="1942.9995">operator*=(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="133" x="2228.5" y="1942.9995">&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="1952.5938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="217" x="2058.5" y="1955.8042">operator*=(internal::tmp&lt;triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="2275.5" y="1955.8042">&gt;&amp;&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="1965.3984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="241" x="2058.5" y="1968.6089">operator+=(const T&amp; data) : triangMatrix*</text><ellipse cx="2049.5" cy="1978.2031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="2058.5" y="1981.4136">operator+=(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="133" x="2231.5" y="1981.4136">&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="1991.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="2058.5" y="1994.2183">operator+=(internal::tmp&lt;triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="2278.5" y="1994.2183">&gt;&amp;&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2003.8125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2058.5" y="2007.0229">operator-=(const T&amp; data) : triangMatrix*</text><ellipse cx="2049.5" cy="2016.6172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="2058.5" y="2019.8276">operator-=(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="133" x="2226.5" y="2019.8276">&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2029.4219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="215" x="2058.5" y="2032.6323">operator-=(internal::tmp&lt;triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="2273.5" y="2032.6323">&gt;&amp;&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2042.2266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="2058.5" y="2045.437">operator/=(const T&amp; data) : triangMatrix*</text><ellipse cx="2049.5" cy="2055.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="297" x="2058.5" y="2058.2417">operator=(const triangMatrix&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2067.8359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="2058.5" y="2071.0464">operator=(const triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="133" x="2222.5" y="2071.0464">&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2080.6406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="363" x="2058.5" y="2083.8511">operator=(internal::tmp&lt;triangMatrix&gt;&amp;&amp; other) : triangMatrix*</text><ellipse cx="2049.5" cy="2093.4453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="211" x="2058.5" y="2096.6558">operator=(internal::tmp&lt;triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="152" x="2269.5" y="2096.6558">&gt;&amp;&amp; other) : triangMatrix*</text><polygon fill="#FFFF44" points="2049.5,2101.25,2053.5,2105.25,2049.5,2109.25,2045.5,2105.25" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="234" x="2058.5" y="2109.4604">swap(triangMatrix&amp; other) : triangMatrix*</text><!--MD5=[52cf85cb2c2f5a1e50a6a7e00217dfdd]
class ul_triangMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="470.5547" id="ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="762" x="1471.5" y="3097"/><ellipse cx="1725.75" cy="3113" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1728.7188,3118.6406 Q1728.1406,3118.9375 1727.5,3119.0781 Q1726.8594,3119.2344 1726.1563,3119.2344 Q1723.6563,3119.2344 1722.3281,3117.5938 Q1721.0156,3115.9375 1721.0156,3112.8125 Q1721.0156,3109.6875 1722.3281,3108.0313 Q1723.6563,3106.375 1726.1563,3106.375 Q1726.8594,3106.375 1727.5,3106.5313 Q1728.1563,3106.6875 1728.7188,3106.9844 L1728.7188,3109.7031 Q1728.0938,3109.125 1727.5,3108.8594 Q1726.9063,3108.5781 1726.2813,3108.5781 Q1724.9375,3108.5781 1724.25,3109.6563 Q1723.5625,3110.7188 1723.5625,3112.8125 Q1723.5625,3114.9063 1724.25,3115.9844 Q1724.9375,3117.0469 1726.2813,3117.0469 Q1726.9063,3117.0469 1727.5,3116.7813 Q1728.0938,3116.5 1728.7188,3115.9219 L1728.7188,3118.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="91" x="1746.25" y="3117.1543">ul_triangMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="2084.5" y="3094"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="2085.5" y="3106.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1472.5" x2="2232.5" y1="3129" y2="3129"/><polygon fill="none" points="1482.5,3135,1486.5,3139,1482.5,3143,1478.5,3139" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="258" x="1491.5" y="3143.2104">staticHelper : static const ul_triangMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="1472.5" x2="2232.5" y1="3149.8047" y2="3149.8047"/><ellipse cx="1482.5" cy="3160.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="91" x="1491.5" y="3164.0151">ul_triangMatrix()</text><ellipse cx="1482.5" cy="3173.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="1491.5" y="3176.8198">ul_triangMatrix(const size_t order)</text><ellipse cx="1482.5" cy="3186.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="1491.5" y="3189.6245">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="1482.5" cy="3199.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="1491.5" y="3202.4292">operator()(const size_t row, const size_t col) : T&amp; {query}</text><polygon fill="#FFFF44" points="1482.5,3207.0234,1486.5,3211.0234,1482.5,3215.0234,1478.5,3211.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="1491.5" y="3215.2339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="1482.5,3219.8281,1486.5,3223.8281,1482.5,3227.8281,1478.5,3223.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="1491.5" y="3228.0386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="1482.5" cy="3237.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="421" x="1491.5" y="3240.8433">hold(const ul_triangMatrix&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3250.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="1491.5" y="3253.6479">hold(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="1637.5" y="3253.6479">&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3263.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1491.5" y="3266.4526">holdAdd(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1658.5" y="3266.4526">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3276.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="1491.5" y="3279.2573">holdAdd(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="424" x="1658.5" y="3279.2573">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3288.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="1491.5" y="3292.062">holdDiv(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1654.5" y="3292.062">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3301.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="1491.5" y="3304.8667">holdInv(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="275" x="1653.5" y="3304.8667">&amp; other, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3314.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1491.5" y="3317.6714">holdMul(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1656.5" y="3317.6714">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3327.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="1491.5" y="3330.4761">holdMul(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="571" x="1656.5" y="3330.4761">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize, const bool checkOverlap) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3340.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1491.5" y="3343.2808">holdSub(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="323" x="1659.5" y="3343.2808">&amp; a, const T&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3352.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="1491.5" y="3356.0854">holdSub(const T&amp; a, const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="252" x="1730.5" y="3356.0854">&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3365.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="1491.5" y="3368.8901">holdSub(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="424" x="1659.5" y="3368.8901">&amp; a, const ul_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3378.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="254" x="1491.5" y="3381.6948">operator*=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3391.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="1491.5" y="3394.4995">operator*=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="1677.5" y="3394.4995">&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3404.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="233" x="1491.5" y="3407.3042">operator*=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="1724.5" y="3407.3042">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3416.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="257" x="1491.5" y="3420.1089">operator+=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3429.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="1491.5" y="3432.9136">operator+=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="1680.5" y="3432.9136">&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3442.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="236" x="1491.5" y="3445.7183">operator+=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="1727.5" y="3445.7183">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3455.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="1491.5" y="3458.5229">operator-=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3468.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="1491.5" y="3471.3276">operator-=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="1675.5" y="3471.3276">&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3480.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="1491.5" y="3484.1323">operator-=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="1722.5" y="3484.1323">&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3493.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="252" x="1491.5" y="3496.937">operator/=(const T&amp; data) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3506.5313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="329" x="1491.5" y="3509.7417">operator=(const ul_triangMatrix&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3519.3359" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="180" x="1491.5" y="3522.5464">operator=(const ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="149" x="1671.5" y="3522.5464">&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3532.1406" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="395" x="1491.5" y="3535.3511">operator=(internal::tmp&lt;ul_triangMatrix&gt;&amp;&amp; other) : ul_triangMatrix*</text><ellipse cx="1482.5" cy="3544.9453" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="227" x="1491.5" y="3548.1558">operator=(internal::tmp&lt;ul_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="168" x="1718.5" y="3548.1558">&gt;&amp;&amp; other) : ul_triangMatrix*</text><polygon fill="#FFFF44" points="1482.5,3552.75,1486.5,3556.75,1482.5,3560.75,1478.5,3556.75" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="266" x="1491.5" y="3560.9604">swap(ul_triangMatrix&amp; other) : ul_triangMatrix*</text><!--MD5=[f4f5cbfc82617ad7591bf28bc610e650]
class uu_triangMatrix--><rect fill="#FEFECE" filter="url(#f1k7ll8uu1yw8x)" height="419.3359" id="uu_triangMatrix" style="stroke: #A80036; stroke-width: 1.5;" width="630" x="2286.5" y="3123"/><ellipse cx="2472.25" cy="3139" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M2475.2188,3144.6406 Q2474.6406,3144.9375 2474,3145.0781 Q2473.3594,3145.2344 2472.6563,3145.2344 Q2470.1563,3145.2344 2468.8281,3143.5938 Q2467.5156,3141.9375 2467.5156,3138.8125 Q2467.5156,3135.6875 2468.8281,3134.0313 Q2470.1563,3132.375 2472.6563,3132.375 Q2473.3594,3132.375 2474,3132.5313 Q2474.6563,3132.6875 2475.2188,3132.9844 L2475.2188,3135.7031 Q2474.5938,3135.125 2474,3134.8594 Q2473.4063,3134.5781 2472.7813,3134.5781 Q2471.4375,3134.5781 2470.75,3135.6563 Q2470.0625,3136.7188 2470.0625,3138.8125 Q2470.0625,3140.9063 2470.75,3141.9844 Q2471.4375,3143.0469 2472.7813,3143.0469 Q2473.4063,3143.0469 2474,3142.7813 Q2474.5938,3142.5 2475.2188,3141.9219 L2475.2188,3144.6406 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="96" x="2492.75" y="3143.1543">uu_triangMatrix</text><rect fill="#FFFFFF" height="15.9688" style="stroke: #000000; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" width="152" x="2767.5" y="3120"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="150" x="2768.5" y="3132.1387">template&lt;typename T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2287.5" x2="2915.5" y1="3155" y2="3155"/><polygon fill="none" points="2297.5,3161,2301.5,3165,2297.5,3169,2293.5,3165" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="262" x="2306.5" y="3169.2104">staticHelper : static const uu_triangMatrix&lt;T&gt;</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="2287.5" x2="2915.5" y1="3175.8047" y2="3175.8047"/><ellipse cx="2297.5" cy="3186.8047" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="2306.5" y="3190.0151">uu_triangMatrix()</text><ellipse cx="2297.5" cy="3199.6094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="197" x="2306.5" y="3202.8198">uu_triangMatrix(const size_t order)</text><ellipse cx="2297.5" cy="3212.4141" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="281" x="2306.5" y="3215.6245">operator()(const size_t row, const size_t col) : T&amp;</text><ellipse cx="2297.5" cy="3225.2188" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="331" x="2306.5" y="3228.4292">operator()(const size_t row, const size_t col) : T&amp; {query}</text><polygon fill="#FFFF44" points="2297.5,3233.0234,2301.5,3237.0234,2297.5,3241.0234,2293.5,3237.0234" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="293" x="2306.5" y="3241.2339">minMemorySize(const size_t order) : size_t {query}</text><polygon fill="#FFFF44" points="2297.5,3245.8281,2301.5,3249.8281,2297.5,3253.8281,2293.5,3249.8281" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="392" x="2306.5" y="3254.0386">minMemorySize(const size_t rows, const size_t cols) : size_t {query}</text><ellipse cx="2297.5" cy="3263.6328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="429" x="2306.5" y="3266.8433">hold(const uu_triangMatrix&amp; other, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3276.4375" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="2306.5" y="3279.6479">hold(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="279" x="2456.5" y="3279.6479">&amp; other, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3289.2422" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2306.5" y="3292.4526">holdAdd(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="327" x="2477.5" y="3292.4526">&amp; a, const T&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3302.0469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="2306.5" y="3305.2573">holdAdd(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="432" x="2477.5" y="3305.2573">&amp; a, const uu_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3314.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="167" x="2306.5" y="3318.062">holdDiv(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="327" x="2473.5" y="3318.062">&amp; a, const T&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3327.6563" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="2306.5" y="3330.8667">holdMul(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="327" x="2475.5" y="3330.8667">&amp; a, const T&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3340.4609" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2306.5" y="3343.6714">holdSub(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="327" x="2478.5" y="3343.6714">&amp; a, const T&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3353.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="243" x="2306.5" y="3356.4761">holdSub(const T&amp; a, const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="256" x="2549.5" y="3356.4761">&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3366.0703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="172" x="2306.5" y="3369.2808">holdSub(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="432" x="2478.5" y="3369.2808">&amp; a, const uu_triangMatrix&lt;V&gt;&amp; b, const bool checkSize) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3378.875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="258" x="2306.5" y="3382.0854">operator*=(const T&amp; data) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3391.6797" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="261" x="2306.5" y="3394.8901">operator+=(const T&amp; data) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3404.4844" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="193" x="2306.5" y="3407.6948">operator+=(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="153" x="2499.5" y="3407.6948">&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3417.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="240" x="2306.5" y="3420.4995">operator+=(internal::tmp&lt;uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="2546.5" y="3420.4995">&gt;&amp;&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3430.0938" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2306.5" y="3433.3042">operator-=(const T&amp; data) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3442.8984" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="188" x="2306.5" y="3446.1089">operator-=(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="153" x="2494.5" y="3446.1089">&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3455.7031" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="235" x="2306.5" y="3458.9136">operator-=(internal::tmp&lt;uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="2541.5" y="3458.9136">&gt;&amp;&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3468.5078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="256" x="2306.5" y="3471.7183">operator/=(const T&amp; data) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3481.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="337" x="2306.5" y="3484.5229">operator=(const uu_triangMatrix&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3494.1172" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="184" x="2306.5" y="3497.3276">operator=(const uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="153" x="2490.5" y="3497.3276">&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3506.9219" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="403" x="2306.5" y="3510.1323">operator=(internal::tmp&lt;uu_triangMatrix&gt;&amp;&amp; other) : uu_triangMatrix*</text><ellipse cx="2297.5" cy="3519.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="2306.5" y="3522.937">operator=(internal::tmp&lt;uu_triangMatrix</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="2537.5" y="3522.937">&gt;&amp;&amp; other) : uu_triangMatrix*</text><polygon fill="#FFFF44" points="2297.5,3527.5313,2301.5,3531.5313,2297.5,3535.5313,2293.5,3531.5313" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="274" x="2306.5" y="3535.7417">swap(uu_triangMatrix&amp; other) : uu_triangMatrix*</text><!--MD5=[6c919788e02595e1e84a019f624b319d]
reverse link MatrixBase to colMajorMatrix--><path d="M1134.46,1304.89 C1086.57,1333.56 1043.09,1369.66 1011.5,1415 C892.76,1585.45 977.26,2142.73 939.5,2347 C892.64,2600.47 898.61,2677.09 774.5,2903 C763.46,2923.1 751.35,2943.08 738.45,2962.8 " fill="none" id="MatrixBase&lt;-colMajorMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1131.1,1298.75,1151.93,1294.86,1138.07,1310.89,1131.1,1298.75" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[49e590bddb4c6e1bd56468ea7f8e358e]
reverse link MatrixBase to diagMatrix--><path d="M1140.06,1369.9 C1127.79,1383.89 1116.8,1398.9 1107.5,1415 C948.46,1690.36 1041.94,2622.79 1099.54,3077.7 " fill="none" id="MatrixBase&lt;-diagMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1135.1,1364.96,1153.87,1355.13,1145.33,1374.52,1135.1,1364.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[c7dc2a3b23fce1c5821742e9643c088e]
reverse link MatrixBase to rowMajorMatrix--><path d="M1133.5,1319.08 C1072.88,1346.59 1012.17,1378.61 958.5,1415 C940.33,1427.32 922.3,1440.46 904.51,1454.23 " fill="none" id="MatrixBase&lt;-rowMajorMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1130.76,1312.64,1151.88,1310.88,1136.47,1325.42,1130.76,1312.64" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[00b8d807e648c68274610a1cb3362984]
reverse link MatrixBase to symMatrix--><path d="M1484.5,1375.38 C1484.5,1421.25 1484.5,1472.28 1484.5,1523.76 " fill="none" id="MatrixBase&lt;-symMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1477.5,1375.37,1484.5,1355.37,1491.5,1375.37,1477.5,1375.37" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[043a10ece6ba27cd40f9ebb8dfb94a5b]
reverse link MatrixBase to triangMatrix--><path d="M1835.86,1314.15 C1897.29,1342.3 1958.44,1375.82 2011.5,1415 C2096.99,1478.12 2175.06,1564.28 2238.14,1645.3 " fill="none" id="MatrixBase&lt;-triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1832.61,1320.36,1817.23,1305.78,1838.35,1307.6,1832.61,1320.36" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b49767015be111d42fafd64cb3e92bd5]
reverse link MatrixBase to ul_triangMatrix--><path d="M1832.07,1354.94 C1850.33,1372.99 1866.47,1392.95 1879.5,1415 C1962.96,1556.22 1901.83,2616.96 1869.33,3096.89 " fill="none" id="MatrixBase&lt;-ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1827.19,1359.96,1817.35,1341.19,1836.75,1349.73,1827.19,1359.96" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[8a555789c5ae7105366797d88f98eb3e]
reverse link MatrixBase to uu_triangMatrix--><path d="M1833.77,1324.21 C1869.56,1349.46 1901.79,1379.45 1926.5,1415 C2045.34,1585.93 1956.61,2149.19 2021.5,2347 C2116.26,2635.87 2305.42,2931.69 2441.99,3122.62 " fill="none" id="MatrixBase&lt;-uu_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1829.74,1329.94,1817.08,1312.95,1837.57,1318.34,1829.74,1329.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[3365d4e99d4987fd48e691a697ed8cbf]
reverse link Vector to MatrixBase--><path d="M1484.5,998.46 C1484.5,1012.02 1484.5,1025.19 1484.5,1037.87 " fill="none" id="Vector&lt;-MatrixBase" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1477.5,998.35,1484.5,978.35,1491.5,998.35,1477.5,998.35" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[6929eaddb088ac73abd3cd61d2140049]
reverse link rowMajorMatrix to Matrix--><path d="M461.85,2367.52 C460.62,2380.81 459.42,2393.94 458.23,2406.82 " fill="none" id="rowMajorMatrix&lt;-Matrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="454.91,2366.5,463.71,2347.22,468.85,2367.78,454.91,2366.5" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[062dcff14d4d91eb99d87d57d9b78ed0]
reverse link symMatrix to ldl_matrix--><path d="M1508.37,2258.07 C1516.13,2380.4 1523.98,2504.07 1528.79,2579.87 " fill="none" id="symMatrix&lt;-ldl_matrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="1501.38,2258.46,1507.1,2238.06,1515.35,2257.58,1501.38,2258.46" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[ed8bc81b5832810e166383fae67ccd9c]
reverse link Matrix to colMajorMatrix--><path d="M422.39,2916.53 C421.62,2931.75 420.84,2947.19 420.06,2962.72 " fill="none" id="Matrix&lt;-colMajorMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="423.06,2903.22,418.7619,2909.0102,422.4535,2915.2047,426.7516,2909.4145,423.06,2903.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[62dca2606b7a812a31f88295add19a4f]
reverse link Vector to Vector--><path d="M1762.79,402.69 C1779.19,424.31 1789,454.41 1789,493 C1789,537.9 1775.71,571.32 1754.23,593.24 " fill="none" id="Vector&lt;-Vector" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1754.23,392.76,1755.1131,399.9168,1762.059,401.8543,1761.1759,394.6975,1754.23,392.76" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[87c23268736b0109104c17c7b59854f1]
reverse link colMajorMatrix to colMajorMatrix--><path d="M806.27,3257.25 C822.57,3276.78 832,3301.86 832,3332.5 C832,3368.48 818.99,3396.8 797.13,3417.46 " fill="none" id="colMajorMatrix&lt;-colMajorMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="797.13,3247.54,798.3347,3254.6498,805.361,3256.2722,804.1562,3249.1624,797.13,3247.54" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[652dddd1fd79333c6254eba363857daf]
reverse link diagMatrix to diagMatrix--><path d="M1427.44,3247.26 C1443.77,3267.94 1453.5,3296.36 1453.5,3332.5 C1453.5,3374.75 1440.21,3406.44 1418.61,3427.56 " fill="none" id="diagMatrix&lt;-diagMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1418.61,3237.44,1419.6541,3244.5751,1426.6419,3246.3556,1425.5978,3239.2205,1418.61,3237.44" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[01f4cbc5d3dea546a42071d4b328a44b]
reverse link ldl_matrix to diagMatrix--><path d="M1482.97,2741.55 C1433.11,2825.96 1354.41,2959.2 1284.41,3077.71 " fill="none" id="ldl_matrix&lt;-diagMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1489.66,2730.22,1483.163,2733.3487,1483.5521,2740.5493,1490.0492,2737.4206,1489.66,2730.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[2e590febbcfc76a64a7634f1077f07b4]
reverse link ldl_matrix to ul_triangMatrix--><path d="M1574.18,2742.15 C1616.2,2831.13 1683.64,2973.92 1741.6,3096.67 " fill="none" id="ldl_matrix&lt;-ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1568.55,2730.22,1567.4976,2737.3539,1573.678,2741.0691,1574.7304,2733.9352,1568.55,2730.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[9d6815212069843e5bb471d98d9b7298]
reverse link ldl_matrix to uu_triangMatrix--><path d="M1649.37,2737.47 C1732.18,2792.05 1848.22,2861.29 1959.5,2903 C2090.5,2952.1 2146.67,2894.23 2268.5,2963 C2338.9,3002.74 2402.39,3062.79 2454.6,3122.95 " fill="none" id="ldl_matrix&lt;-uu_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1638.42,2730.22,1641.2077,2736.8705,1648.4188,2736.8551,1645.6311,2730.2046,1638.42,2730.22" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b9a05f91df6ab841b4ee678d6393a388]
reverse link rowMajorMatrix to rowMajorMatrix--><path d="M913.62,1804.86 C930.01,1824.62 939.5,1850 939.5,1881 C939.5,1917.24 926.54,1945.8 904.73,1966.67 " fill="none" id="rowMajorMatrix&lt;-rowMajorMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="904.73,1795.33,905.9016,1802.4453,912.9202,1804.1005,911.7486,1796.9852,904.73,1795.33" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[4012c05f32cfbda0c74f49bc7c65c5df]
reverse link symMatrix to symMatrix--><path d="M1852.63,1801.9 C1868.97,1822.06 1878.5,1848.43 1878.5,1881 C1878.5,1919.07 1865.48,1948.67 1843.78,1969.79 " fill="none" id="symMatrix&lt;-symMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="1843.78,1792.21,1844.8742,1799.3376,1851.8744,1801.069,1850.7802,1793.9414,1843.78,1792.21" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[721666fe0d8c89c75f71ff74434003d3]
reverse link internal.tmp to internal.tmp--><path d="M1946.8,412.27 C1996.09,323.78 2059,350.69 2059,493 C2059,641.25 1990.74,664.27 1940.7,562.06 " fill="none" id="internal.tmp&lt;-internal.tmp" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#FFFFFF" points="1940.7,423.94,1947.0216,420.4705,1946.2503,413.3007,1939.9288,416.7703,1940.7,423.94" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[48c01ed9e22cca331bc41ccf987ac236]
reverse link triangMatrix to triangMatrix--><path d="M2761.55,1801.63 C2777.94,1821.83 2787.5,1848.29 2787.5,1881 C2787.5,1919.24 2774.43,1948.93 2752.68,1970.07 " fill="none" id="triangMatrix&lt;-triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2752.68,1791.93,2753.78,1799.0567,2760.7815,1800.7824,2759.6816,1793.6557,2752.68,1791.93" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f2eecb54a2793922aea70bdf03410f50]
reverse link ul_triangMatrix to ul_triangMatrix--><path d="M2242.54,3255.91 C2258.96,3275.63 2268.5,3301.16 2268.5,3332.5 C2268.5,3369.14 2255.47,3397.83 2233.63,3418.59 " fill="none" id="ul_triangMatrix&lt;-ul_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2233.63,3246.41,2234.818,3253.5226,2241.8404,3255.1616,2240.6524,3248.049,2233.63,3246.41" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[add3911a0973776ceba1424f8a7d4446]
reverse link uu_triangMatrix to uu_triangMatrix--><path d="M2925.58,3250.47 C2941.88,3270.85 2951.5,3298.19 2951.5,3332.5 C2951.5,3372.6 2938.36,3403.19 2916.76,3424.26 " fill="none" id="uu_triangMatrix&lt;-uu_triangMatrix" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="2916.76,3240.74,2917.8321,3247.871,2924.8268,3249.6241,2923.7548,3242.4931,2916.76,3240.74" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[b477207341245148b4e9f62eb6271610]
@startuml






class Matrix <template<typename TT>> {
	+Matrix()
	+Matrix(const size_t rows, const size_t cols)
	+Matrix(TT* data, const size_t rows, const size_t cols, const bool share)
	+Matrix(const Matrix<TT>& other)
	+Matrix(const Matrix<U>& other)
	+Matrix(const rowMajorMatrix<TT>& other)
	+Matrix(const rowMajorMatrix<U>& other)
	+Matrix(const colMajorMatrix<TT>& other)
	+Matrix(const colMajorMatrix<U>& other)
	+Matrix(internal::tmp<rowMajorMatrix<TT>>&& other)
	+Matrix(internal::tmp<colMajorMatrix<TT>>&& other)
	+operator*=(const U& data) : Matrix<TT>*
	+operator*=(const rowMajorMatrix<U>& other) : Matrix<TT>*
	+operator*=(internal::tmp<rowMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator*=(const colMajorMatrix<U>& other) : Matrix<TT>*
	+operator*=(internal::tmp<colMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator+=(const U& data) : Matrix<TT>*
	+operator+=(const rowMajorMatrix<U>& other) : Matrix<TT>*
	+operator+=(internal::tmp<rowMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator+=(const colMajorMatrix<U>& other) : Matrix<TT>*
	+operator+=(internal::tmp<colMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator-=(const U& data) : Matrix<TT>*
	+operator-=(const rowMajorMatrix<U>& other) : Matrix<TT>*
	+operator-=(internal::tmp<rowMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator-=(const colMajorMatrix<U>& other) : Matrix<TT>*
	+operator-=(internal::tmp<colMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator/=(const U& data) : Matrix<TT>*
	+operator=(const rowMajorMatrix<U>& other) : Matrix<TT>*
	+operator=(internal::tmp<rowMajorMatrix<U>>&& other) : Matrix<TT>*
	+operator=(const colMajorMatrix<U>& other) : Matrix<TT>*
	+operator=(internal::tmp<colMajorMatrix<U>>&& other) : Matrix<TT>*
	+referT() : Matrix<TT>*
	+resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : Matrix<TT>*
	#swap(Matrix<TT>& other) : Matrix<TT>*
	+T : colMajorMatrix<TT>
}


abstract class MatrixBase <template<typename T=float>> {
	+MatrixBase()
	+MatrixBase(const size_t rows, const size_t cols)
	#checkOverlap(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	#checkSize_add(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	#checkSize_mul(const MatrixBase<U>& a, const MatrixBase<V>& b) : MatrixBase<T>*
	+fill(const T value) : MatrixBase<T>*
	#refer(const Vector<T>& data, const size_t rows, const size_t cols) : MatrixBase<T>*
	#refer(const T* data, const size_t rows, const size_t cols) : MatrixBase<T>*
	+resize(const size_t rows, const size_t cols, const bool deallocIfPossible, const bool saveData) : MatrixBase<T>*
	+resizeLike(const MatrixBase<U>& other, const bool deallocIfPossible, const bool saveData) : MatrixBase<T>*
	#swap(MatrixBase<T>& other) : MatrixBase<T>*
	+{abstract} operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	+isAdditionCompatible(const MatrixBase<U>& other) : bool {query}
	+isMultiplicationCompatible(const MatrixBase<U>& other) : bool {query}
	#_cols : size_t
	#_rows : size_t
	+cols() : size_t {query}
	#{abstract} minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#minMemorySize() : size_t {query}
	+rows() : size_t {query}
}


class Vector <template<typename T>> {
	+Vector()
	+Vector(const size_t N)
	+Vector(internal::tmp<Vector>&& v)
	+Vector(internal::tmp<Vector<U>>&& v)
	+Vector(const Vector& v, const bool share)
	+Vector(T* begin, const size_t N, const bool share)
	+~Vector()
	+operator[](size_t i) : T {query}
	+operator[](const size_t i) : T&
	#_begin : T*
	#_end : T*
	#_endOfStorage : T*
	+begin() : T* {query}
	+end() : T* {query}
	+dot(const Vector<U>& other, const bool checkSize) : V
	+addMul(const rowMajorMatrix<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	#allocate(const size_t capacity, const bool deallocIfPossible, const bool saveData) : Vector*
	+fill(const T val) : Vector*
	+hold(T* begin, const size_t N, const bool checkSize) : Vector*
	+hold(const Vector& v, const bool checkSize) : Vector*
	+hold(const Vector<U>& v, const bool checkSize) : Vector*
	+holdAdd(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdAdd(const Vector<U>& v1, const T val, const bool checkSize) : Vector*
	+holdDiv(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdDiv(const T val, const Vector<U>& v, const bool checkSize) : Vector*
	+holdMul(const MatrixBase<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	+holdMul(const rowMajorMatrix<U>& a, const Vector<V>& b, const bool checkSize) : Vector*
	+holdMul(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdMul(const Vector<U>& v1, const V val, const bool checkSize) : Vector*
	+holdSub(const Vector<U>& v1, const Vector<V>& v2, const bool checkSize) : Vector*
	+holdSub(const Vector<U>& v1, const T val, const bool checkSize) : Vector*
	+holdSub(const T val, const Vector<U>& v, const bool checkSize) : Vector*
	+insert(const T& value, const size_t index) : Vector*
	+operator*=(const Vector<U>& v) : Vector*
	+operator*=(const T& val) : Vector*
	+operator*=(internal::tmp<Vector<T>>&& v) : Vector*
	+operator+=(const Vector<U>& v) : Vector*
	+operator+=(const T& val) : Vector*
	+operator+=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator-=(const Vector<U>& v) : Vector*
	+operator-=(const T& val) : Vector*
	+operator-=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator/=(const Vector<U>& v) : Vector*
	+operator/=(const T& val) : Vector*
	+operator/=(internal::tmp<Vector<U>>&& v) : Vector*
	+operator=(const Vector& v) : Vector*
	+operator=(const Vector<U>& v) : Vector*
	+operator=(internal::tmp<Vector>&& v) : Vector*
	+operator=(internal::tmp<Vector<U>>&& v) : Vector*
	+pop_back() : Vector*
	+push_back(const T& value) : Vector*
	#refer(const Vector& other) : Vector*
	#refer(T* data, size_t length) : Vector*
	+removeAt(const size_t index) : Vector*
	+removeFirst(const T& value) : Vector*
	+removeLast(const T& value) : Vector*
	+resize(const size_t N, const bool deallocateIfPossible, const bool saveData) : Vector*
	+sort(const bool ascending) : Vector*
	#swap(Vector& other) : Vector*
	+findAll(const T& value, Vector<size_t>& indices_holder) : Vector<size_t>* {query}
	+operator!=(const Vector<U>& v) : bool {query}
	+operator!=(const T val) : bool {query}
	+operator==(const Vector<U>& v) : bool {query}
	+operator==(const T val) : bool {query}
	#overlap(const Vector<U>& other) : bool {query}
	+shared() : bool {query}
	+capacity() : size_t {query}
	+findFirst(const T& value) : size_t {query}
	+findLast(const T& value) : size_t {query}
	#minMemorySize(const size_t N) : size_t {query}
	+size() : size_t {query}
	#{static} staticHelper : static const Vector
}


class colMajorMatrix <template<typename T>> {
	+colMajorMatrix()
	+colMajorMatrix(const size_t rows, const size_t cols)
	+colMajorMatrix(T* data, const size_t rows, const size_t cols, const bool share)
	+colMajorMatrix(const colMajorMatrix& other)
	+colMajorMatrix(const colMajorMatrix<U>& other)
	+colMajorMatrix(internal::tmp<colMajorMatrix<T>>&& other)
	+colMajorMatrix(internal::tmp<colMajorMatrix<U>>&& other)
	+colMajorMatrix(const rowMajorMatrix<U>& other)
	+colMajorMatrix(internal::tmp<rowMajorMatrix<U>>&& other)
	+operator()(const size_t row, const size_t col) : T&
	+hold(const colMajorMatrix& other, const bool checkSize) : colMajorMatrix*
	+operator=(internal::tmp<colMajorMatrix>&& other) : colMajorMatrix*
	+hold(const colMajorMatrix<U>& other, const bool checkSize) : colMajorMatrix<T>*
	+hold(const rowMajorMatrix<U>& other, const bool checkSize) : colMajorMatrix<T>*
	+holdAdd(const colMajorMatrix<U>& a, const T& b, const bool checkSize) : colMajorMatrix<T>*
	+holdAdd(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdAdd(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdAdd(const colMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const T& b, const bool checkSize) : colMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : colMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : colMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : colMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : colMajorMatrix<T>*
	+holdSub(const colMajorMatrix<U>& a, const T& b, const bool checkSize) : colMajorMatrix<T>*
	+holdSub(const T& a, const colMajorMatrix<U>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdSub(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdSub(const colMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : colMajorMatrix<T>*
	+operator*=(const T& data) : colMajorMatrix<T>*
	+operator*=(const colMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator*=(internal::tmp<colMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator*=(const rowMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator*=(internal::tmp<rowMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator+=(const T& data) : colMajorMatrix<T>*
	+operator+=(const colMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator+=(internal::tmp<colMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator+=(const rowMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator+=(internal::tmp<rowMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator-=(const T& data) : colMajorMatrix<T>*
	+operator-=(const colMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator-=(internal::tmp<colMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator-=(const rowMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator-=(internal::tmp<rowMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator/=(const T& data) : colMajorMatrix<T>*
	+operator=(const colMajorMatrix<T>& other) : colMajorMatrix<T>*
	+operator=(const colMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator=(internal::tmp<colMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	+operator=(const rowMajorMatrix<U>& other) : colMajorMatrix<T>*
	+operator=(internal::tmp<rowMajorMatrix<U>>&& other) : colMajorMatrix<T>*
	#refer(colMajorMatrix<T>& other) : colMajorMatrix<T>*
	#swap(colMajorMatrix<T>& other) : colMajorMatrix<T>*
	#{static} staticHelper : const static colMajorMatrix<T>
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
}


class diagMatrix <template<typename T>> {
	+diagMatrix(const size_t rows, const size_t cols)
	+diagMatrix(const size_t size)
	+diagMatrix()
	+det() : T {query}
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	+holdInv(const diagMatrix<U>& other, const bool checkSize) : diagMatrix*
	+operator*=(const T& data) : diagMatrix*
	+operator*=(const diagMatrix<U>& other) : diagMatrix*
	+operator*=(internal::tmp<diagMatrix<U>>&& other) : diagMatrix*
	+operator+=(const T& data) : diagMatrix*
	+operator+=(const diagMatrix<U>& other) : diagMatrix*
	+operator+=(internal::tmp<diagMatrix<U>>&& other) : diagMatrix*
	+operator-=(const T& data) : diagMatrix*
	+operator-=(const diagMatrix<U>& other) : diagMatrix*
	+operator-=(internal::tmp<diagMatrix<U>>&& other) : diagMatrix*
	+operator/=(const T& data) : diagMatrix*
	+operator=(const diagMatrix& other) : diagMatrix*
	+operator=(const diagMatrix<U>& other) : diagMatrix*
	+operator=(internal::tmp<diagMatrix>&& other) : diagMatrix*
	+operator=(internal::tmp<diagMatrix<U>>&& other) : diagMatrix*
	+checkIsSquare() : diagMatrix<T>* {query}
	+hold(const diagMatrix<T>& other, const bool checkSize) : diagMatrix<T>*
	+hold(const diagMatrix<U>& other, const bool checkSize) : diagMatrix<T>*
	+holdAdd(const diagMatrix<U>& a, const T& b, const bool checkSize) : diagMatrix<T>*
	+holdAdd(const diagMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : diagMatrix<T>*
	+holdDiv(const diagMatrix<U>& a, const T& b, const bool checkSize) : diagMatrix<T>*
	+holdInv(const T val, const diagMatrix<U>& other, const bool checkSize) : diagMatrix<T>*
	+holdMul(const diagMatrix<U>& a, const T& b, const bool checkSize) : diagMatrix<T>*
	+holdMul(const diagMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : diagMatrix<T>*
	+holdSub(const diagMatrix<U>& a, const T& b, const bool checkSize) : diagMatrix<T>*
	+holdSub(const T& a, const diagMatrix<U>& b, const bool checkSize) : diagMatrix<T>*
	+holdSub(const diagMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : diagMatrix<T>*
	#swap(diagMatrix<T>& other) : diagMatrix<T>*
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const diagMatrix<T>
}


class ldl_matrix <template<typename T>> {
	+ldl_matrix()
	+ldl_matrix(const size_t order)
	+D : diagMatrix<T>
	+decompose() : ldl_matrix<T>*
	+referT() : ldl_matrix<T>*
	+resize(const size_t order, const bool deallocIfPossible, const bool saveData) : ldl_matrix<T>*
	+L : ul_triangMatrix<T>
	+LT : uu_triangMatrix<T>
}


class rowMajorMatrix <template<typename T>> {
	+rowMajorMatrix()
	+rowMajorMatrix(const size_t rows, const size_t cols)
	+rowMajorMatrix(T* data, const size_t rows, const size_t cols, const bool share)
	+rowMajorMatrix(const rowMajorMatrix& other)
	+rowMajorMatrix(const rowMajorMatrix<U>& other)
	+rowMajorMatrix(internal::tmp<rowMajorMatrix<T>>&& other)
	+rowMajorMatrix(internal::tmp<rowMajorMatrix<U>>&& other)
	+rowMajorMatrix(const colMajorMatrix<U>& other)
	+rowMajorMatrix(const internal::tmp<colMajorMatrix<U>>& other)
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	+hold(const rowMajorMatrix& other, const bool checkSize) : rowMajorMatrix*
	+operator*=(const T& data) : rowMajorMatrix*
	+operator+=(const T& data) : rowMajorMatrix*
	+operator-=(const T& data) : rowMajorMatrix*
	+operator/=(const T& data) : rowMajorMatrix*
	+operator=(internal::tmp<rowMajorMatrix>&& other) : rowMajorMatrix*
	+hold(const rowMajorMatrix<U>& other, const bool checkSize) : rowMajorMatrix<T>*
	+hold(const colMajorMatrix<U>& other, const bool checkSize) : rowMajorMatrix<T>*
	+hold(const diagMatrix<U>& other, const bool checkSize) : rowMajorMatrix<T>*
	+holdAdd(const rowMajorMatrix<U>& a, const T& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdAdd(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdAdd(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdAdd(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdAdd(const rowMajorMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdDiv(const rowMajorMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const T& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : rowMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdMul(const diagMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdMul(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdMul(const colMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const T& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const T& a, const rowMajorMatrix<U>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const colMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const colMajorMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const rowMajorMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+holdSub(const diagMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : rowMajorMatrix<T>*
	+operator*=(const rowMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator*=(internal::tmp<rowMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator*=(const colMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator*=(internal::tmp<colMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator*=(const diagMatrix<U>& other) : rowMajorMatrix<T>*
	+operator+=(const rowMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator+=(internal::tmp<rowMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator+=(const colMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator+=(internal::tmp<colMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator+=(const diagMatrix<U>& other) : rowMajorMatrix<T>*
	+operator-=(const rowMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator-=(internal::tmp<rowMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator-=(const colMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator-=(internal::tmp<colMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator-=(const diagMatrix<U>& other) : rowMajorMatrix<T>*
	+operator/=(const diagMatrix<U>& other) : rowMajorMatrix<T>*
	+operator=(const rowMajorMatrix<T>& other) : rowMajorMatrix<T>*
	+operator=(const rowMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator=(internal::tmp<rowMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator=(const colMajorMatrix<U>& other) : rowMajorMatrix<T>*
	+operator=(internal::tmp<colMajorMatrix<U>>&& other) : rowMajorMatrix<T>*
	+operator=(const diagMatrix<U>& other) : rowMajorMatrix<T>*
	#refer(rowMajorMatrix<T>& other) : rowMajorMatrix<T>*
	#swap(rowMajorMatrix<T>& other) : rowMajorMatrix<T>*
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const rowMajorMatrix<T>
}


class symMatrix <template<typename T>> {
	+symMatrix()
	+symMatrix(const size_t order)
	+symMatrix(const size_t rows, const size_t cols)
	+operator()(const size_t row, const size_t col) : T&
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const symMatrix<T>
	+addMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+addMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+hold(const symMatrix& other, const bool checkSize) : symMatrix*
	+hold(const symMatrix<U>& other, const bool checkSize) : symMatrix*
	+hold(const rowMajorMatrix<U>& other, const bool checkSize) : symMatrix*
	+holdAdd(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdAdd(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdInv(ldl_matrix<U>& other, const bool checkSize) : symMatrix*
	+holdMul(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const symMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	+holdMul(const rowMajorMatrix<U>& a, const colMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdMul(const triangMatrix<U>& a, const uu_triangMatrix<U>& b, const bool checkSize) : symMatrix*
	+holdSub(const symMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdSub(const rowMajorMatrix<U>& a, const symMatrix<V>& b, const bool checkSize) : symMatrix*
	+holdSub(const symMatrix<U>& a, const rowMajorMatrix<V>& b, const bool checkSize) : symMatrix*
	+operator*=(const T& data) : symMatrix*
	+operator*=(const symMatrix<U>& other) : symMatrix*
	+operator*=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator*=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator*=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator+=(const T& data) : symMatrix*
	+operator+=(const symMatrix<U>& other) : symMatrix*
	+operator+=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator+=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator+=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator-=(const T& data) : symMatrix*
	+operator-=(const symMatrix<U>& other) : symMatrix*
	+operator-=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator-=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator-=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+operator/=(const T& data) : symMatrix*
	+operator=(const symMatrix& other) : symMatrix*
	+operator=(const symMatrix<U>& other) : symMatrix*
	+operator=(internal::tmp<symMatrix>&& other) : symMatrix*
	+operator=(internal::tmp<symMatrix<U>>&& other) : symMatrix*
	+operator=(const rowMajorMatrix<U>& other) : symMatrix*
	+operator=(internal::tmp<rowMajorMatrix<U>>&& other) : symMatrix*
	+subMul(const rowMajorMatrix<U>& a, const rowMajorMatrix<U>& b, const bool checkSize, const bool checkOverlap) : symMatrix*
	#swap(symMatrix& other) : symMatrix*
	+holdAdd(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdMul(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdSub(const symMatrix<U>& a, const T& b, const bool checkSize) : symMatrix<T>*
	+holdSub(const T& a, const symMatrix<U>& b, const bool checkSize) : symMatrix<T>*
}


class triangMatrix <template<typename T>> {
	+triangMatrix()
	+triangMatrix(const size_t order)
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const triangMatrix<T>
	+hold(const triangMatrix& other, const bool checkSize) : triangMatrix*
	+hold(const triangMatrix<U>& other, const bool checkSize) : triangMatrix*
	+holdAdd(const triangMatrix<U>& a, const T& b, const bool checkSize) : triangMatrix*
	+holdAdd(const triangMatrix<U>& a, const triangMatrix<V>& b, const bool checkSize) : triangMatrix*
	+holdDiv(const triangMatrix<U>& a, const T& b, const bool checkSize) : triangMatrix*
	+holdMul(const triangMatrix<U>& a, const T& b, const bool checkSize) : triangMatrix*
	+holdMul(const triangMatrix<U>& a, const triangMatrix<V>& b, const bool checkSize, const bool checkOverlap) : triangMatrix*
	+holdMul(const ul_triangMatrix<U>& a, const diagMatrix<V>& b, const bool checkSize) : triangMatrix*
	+holdSub(const triangMatrix<U>& a, const T& b, const bool checkSize) : triangMatrix*
	+holdSub(const T& a, const triangMatrix<U>& b, const bool checkSize) : triangMatrix*
	+holdSub(const triangMatrix<U>& a, const triangMatrix<V>& b, const bool checkSize) : triangMatrix*
	+operator*=(const T& data) : triangMatrix*
	+operator*=(const triangMatrix<U>& other) : triangMatrix*
	+operator*=(internal::tmp<triangMatrix<U>>&& other) : triangMatrix*
	+operator+=(const T& data) : triangMatrix*
	+operator+=(const triangMatrix<U>& other) : triangMatrix*
	+operator+=(internal::tmp<triangMatrix<U>>&& other) : triangMatrix*
	+operator-=(const T& data) : triangMatrix*
	+operator-=(const triangMatrix<U>& other) : triangMatrix*
	+operator-=(internal::tmp<triangMatrix<U>>&& other) : triangMatrix*
	+operator/=(const T& data) : triangMatrix*
	+operator=(const triangMatrix& other) : triangMatrix*
	+operator=(const triangMatrix<U>& other) : triangMatrix*
	+operator=(internal::tmp<triangMatrix>&& other) : triangMatrix*
	+operator=(internal::tmp<triangMatrix<U>>&& other) : triangMatrix*
	#swap(triangMatrix& other) : triangMatrix*
}


class ul_triangMatrix <template<typename T>> {
	+ul_triangMatrix()
	+ul_triangMatrix(const size_t order)
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const ul_triangMatrix<T>
	+hold(const ul_triangMatrix& other, const bool checkSize) : ul_triangMatrix*
	+hold(const ul_triangMatrix<U>& other, const bool checkSize) : ul_triangMatrix*
	+holdAdd(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdAdd(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize) : ul_triangMatrix*
	+holdDiv(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdInv(const ul_triangMatrix<U>& other, const bool checkSize) : ul_triangMatrix*
	+holdMul(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdMul(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize, const bool checkOverlap) : ul_triangMatrix*
	+holdSub(const ul_triangMatrix<U>& a, const T& b, const bool checkSize) : ul_triangMatrix*
	+holdSub(const T& a, const ul_triangMatrix<U>& b, const bool checkSize) : ul_triangMatrix*
	+holdSub(const ul_triangMatrix<U>& a, const ul_triangMatrix<V>& b, const bool checkSize) : ul_triangMatrix*
	+operator*=(const T& data) : ul_triangMatrix*
	+operator*=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator*=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator+=(const T& data) : ul_triangMatrix*
	+operator+=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator+=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator-=(const T& data) : ul_triangMatrix*
	+operator-=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator-=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	+operator/=(const T& data) : ul_triangMatrix*
	+operator=(const ul_triangMatrix& other) : ul_triangMatrix*
	+operator=(const ul_triangMatrix<U>& other) : ul_triangMatrix*
	+operator=(internal::tmp<ul_triangMatrix>&& other) : ul_triangMatrix*
	+operator=(internal::tmp<ul_triangMatrix<U>>&& other) : ul_triangMatrix*
	#swap(ul_triangMatrix& other) : ul_triangMatrix*
}


class uu_triangMatrix <template<typename T>> {
	+uu_triangMatrix()
	+uu_triangMatrix(const size_t order)
	+operator()(const size_t row, const size_t col) : T&
	+operator()(const size_t row, const size_t col) : T& {query}
	#minMemorySize(const size_t order) : size_t {query}
	#minMemorySize(const size_t rows, const size_t cols) : size_t {query}
	#{static} staticHelper : static const uu_triangMatrix<T>
	+hold(const uu_triangMatrix& other, const bool checkSize) : uu_triangMatrix*
	+hold(const uu_triangMatrix<U>& other, const bool checkSize) : uu_triangMatrix*
	+holdAdd(const uu_triangMatrix<U>& a, const T& b, const bool checkSize) : uu_triangMatrix*
	+holdAdd(const uu_triangMatrix<U>& a, const uu_triangMatrix<V>& b, const bool checkSize) : uu_triangMatrix*
	+holdDiv(const uu_triangMatrix<U>& a, const T& b, const bool checkSize) : uu_triangMatrix*
	+holdMul(const uu_triangMatrix<U>& a, const T& b, const bool checkSize) : uu_triangMatrix*
	+holdSub(const uu_triangMatrix<U>& a, const T& b, const bool checkSize) : uu_triangMatrix*
	+holdSub(const T& a, const uu_triangMatrix<U>& b, const bool checkSize) : uu_triangMatrix*
	+holdSub(const uu_triangMatrix<U>& a, const uu_triangMatrix<V>& b, const bool checkSize) : uu_triangMatrix*
	+operator*=(const T& data) : uu_triangMatrix*
	+operator+=(const T& data) : uu_triangMatrix*
	+operator+=(const uu_triangMatrix<U>& other) : uu_triangMatrix*
	+operator+=(internal::tmp<uu_triangMatrix<U>>&& other) : uu_triangMatrix*
	+operator-=(const T& data) : uu_triangMatrix*
	+operator-=(const uu_triangMatrix<U>& other) : uu_triangMatrix*
	+operator-=(internal::tmp<uu_triangMatrix<U>>&& other) : uu_triangMatrix*
	+operator/=(const T& data) : uu_triangMatrix*
	+operator=(const uu_triangMatrix& other) : uu_triangMatrix*
	+operator=(const uu_triangMatrix<U>& other) : uu_triangMatrix*
	+operator=(internal::tmp<uu_triangMatrix>&& other) : uu_triangMatrix*
	+operator=(internal::tmp<uu_triangMatrix<U>>&& other) : uu_triangMatrix*
	#swap(uu_triangMatrix& other) : uu_triangMatrix*
}


namespace internal {
	class tmp <template<class Derived>> {
		+currentlyUsed : bool
		+{static} bufferSize() : size_t
		+{static} currentlyUsedCount() : size_t
		-{static} buffer : static Vector<tmp*>
		+{static} get(Args ... shape) : tmp*
		+release() : tmp*
		+{static} freeAll() : void
	}
}






MatrixBase <|- - colMajorMatrix


MatrixBase <|- - diagMatrix


MatrixBase <|- - rowMajorMatrix


MatrixBase <|- - symMatrix


MatrixBase <|- - triangMatrix


MatrixBase <|- - ul_triangMatrix


MatrixBase <|- - uu_triangMatrix


Vector <|- - MatrixBase


rowMajorMatrix <|- - Matrix


symMatrix <|- - ldl_matrix






Matrix *- - colMajorMatrix


Vector *- - Vector


colMajorMatrix *- - colMajorMatrix


diagMatrix *- - diagMatrix


ldl_matrix *- - diagMatrix


ldl_matrix *- - ul_triangMatrix


ldl_matrix *- - uu_triangMatrix


rowMajorMatrix *- - rowMajorMatrix


symMatrix *- - symMatrix


internal.tmp o- - internal.tmp


triangMatrix *- - triangMatrix


ul_triangMatrix *- - ul_triangMatrix


uu_triangMatrix *- - uu_triangMatrix









@enduml

PlantUML version 1.2020.02(Sun Mar 01 10:22:07 UTC 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.24+8
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>